

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

from PIL import Image, ImageTk

import coffeemanagementsystem_support
import os.path

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    root = tk.Tk()
    coffeemanagementsystem_support.set_Tk_var()
    top = Toplevel2 (root)
    coffeemanagementsystem_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel2(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel2(root, *args, **kwargs)' .'''
    global w, w_win, root
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    coffeemanagementsystem_support.set_Tk_var()
    top = Toplevel2 (w)
    coffeemanagementsystem_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel2():
    global w
    w.destroy()
    w = None

class Toplevel2:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("951x661+531+171")
        top.minsize(120, 1)
        top.maxsize(1924, 1061)
        top.resizable(1,  1)
        top.title("Coffee Management System")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.style.configure('TNotebook.Tab', background=_bgcolor)
        self.style.configure('TNotebook.Tab', foreground=_fgcolor)
        self.style.map('TNotebook.Tab', background=
            [('selected', _compcolor), ('active',_ana2color)])
        self.TNotebook1 = ttk.Notebook(top)
        self.TNotebook1.place(relx=0.0, rely=0.0, relheight=1.021
                , relwidth=0.999)
        self.TNotebook1.configure(takefocus="")
        self.TNotebook1_t1 = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t1, padding=3)
        self.TNotebook1.tab(0, text="Home    ",compound="left",underline="-1",)
        self.TNotebook1_t1.configure(background="#d9d9d9")
        self.TNotebook1_t1.configure(highlightbackground="#2c2c2c")
        self.TNotebook1_t1.configure(highlightcolor="black")
        self.TNotebook1_login = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_login, padding=3)
        self.TNotebook1.tab(1, text="Login",compound="none",underline="-1",)
        self.TNotebook1_login.configure(background="#80ffff")
        self.TNotebook1_login.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_login.configure(highlightcolor="black")
        self.TNotebook1_customer = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_customer, padding=3)
        self.TNotebook1.tab(2, text="Customer    ", compound="none"
                ,underline="-1", )
        self.TNotebook1_customer.configure(background="#d9d9d9")
        self.TNotebook1_customer.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_customer.configure(highlightcolor="black")
        self.TNotebook1_t2_coffee = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t2_coffee, padding=3)
        self.TNotebook1.tab(3, text="Coffee     ", compound="left", underline="-1"
                ,)
        self.TNotebook1_t2_coffee.configure(background="white")
        self.TNotebook1_t2_coffee.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_t2_coffee.configure(highlightcolor="black")
        self.TNotebook1_placeorder = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_placeorder, padding=3)
        self.TNotebook1.tab(4, text="Place Order     ", compound="none"
                ,underline="-1", )
        self.TNotebook1_placeorder.configure(background="#d9d9d9")
        self.TNotebook1_placeorder.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_placeorder.configure(highlightcolor="black")
        self.TNotebook1_employee = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_employee, padding=3)
        self.TNotebook1.tab(5, text="Employee    ", compound="none"
                ,underline="-1", )
        self.TNotebook1_employee.configure(background="#d9d9d9")
        self.TNotebook1_employee.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_employee.configure(highlightcolor="black")
        self.TNotebook1_summary = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_summary, padding=3)
        self.TNotebook1.tab(6, text="Summary",compound="none",underline="-1",)
        self.TNotebook1_summary.configure(background="#d9d9d9")
        self.TNotebook1_summary.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_summary.configure(highlightcolor="black")
        self.TNotebook1_setprices = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_setprices, padding=3)
        self.TNotebook1.tab(7, text="Set Prices", compound="none", underline="-1"
                ,)
        self.TNotebook1_setprices.configure(background="#ffffff")
        self.TNotebook1_setprices.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_setprices.configure(highlightcolor="black")
        self.TNotebook1infocustomer = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1infocustomer, padding=3)
        self.TNotebook1.tab(8, text="Tell us about yourself", compound="none"
                ,underline="-1", )
        self.TNotebook1infocustomer.configure(background="#ffe8f3")
        self.TNotebook1infocustomer.configure(highlightbackground="#d9d9d9")
        self.TNotebook1infocustomer.configure(highlightcolor="black")
        self.TNotebook1_ownerlogin = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_ownerlogin, padding=3)
        self.TNotebook1.tab(9, text="Login  ",compound="none",underline="-1",)
        self.TNotebook1_ownerlogin.configure(background="#00ffff")
        self.TNotebook1_ownerlogin.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_ownerlogin.configure(highlightcolor="black")
        self.TNotebook1_mainmenu = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_mainmenu, padding=3)
        self.TNotebook1.tab(10, text="Main Menu", compound="none", underline="-1"
                ,)
        self.TNotebook1_mainmenu.configure(background="#d9d9d9")
        self.TNotebook1_mainmenu.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_mainmenu.configure(highlightcolor="black")

        self.Imgcustomer = tk.Label(self.TNotebook1_t1)
        self.Imgcustomer.place(relx=-0.095, rely=-0.046, height=753, width=1132)
        self.Imgcustomer.configure(activebackground="#f9f9f9")
        self.Imgcustomer.configure(activeforeground="black")
        self.Imgcustomer.configure(background="#d9d9d9")
        self.Imgcustomer.configure(disabledforeground="#a3a3a3")
        self.Imgcustomer.configure(foreground="yellow")
        self.Imgcustomer.configure(highlightbackground="#d9d9d9")
        self.Imgcustomer.configure(highlightcolor="black")
        photo_location = os.path.join(prog_location,"customerpage.png")
        global _img0
        _img0 = tk.PhotoImage(file=photo_location)
        self.Imgcustomer.configure(image=_img0)
        self.Imgcustomer.configure(text='''Label''')

        self.Frame1 = tk.Frame(self.TNotebook1_t1)
        self.Frame1.place(relx=0.021, rely=0.1, relheight=0.778, relwidth=0.285)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(background="black")
        self.Frame1.configure(highlightbackground="#d9d9d9")
        self.Frame1.configure(highlightcolor="black")

        self.LabelCustomers = tk.Label(self.Frame1)
        self.LabelCustomers.place(relx=0.189, rely=0.329, height=44, width=155)
        self.LabelCustomers.configure(activebackground="#f9f9f9")
        self.LabelCustomers.configure(activeforeground="black")
        self.LabelCustomers.configure(background="black")
        self.LabelCustomers.configure(disabledforeground="#a3a3a3")
        self.LabelCustomers.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelCustomers.configure(foreground="white")
        self.LabelCustomers.configure(highlightbackground="#d9d9d9")
        self.LabelCustomers.configure(highlightcolor="black")
        self.LabelCustomers.configure(text='''Total Customers:''')

        self.LabelTime = tk.Label(self.Frame1)
        self.LabelTime.place(relx=0.152, rely=0.02, height=44, width=155)
        self.LabelTime.configure(activebackground="#f9f9f9")
        self.LabelTime.configure(activeforeground="black")
        self.LabelTime.configure(background="black")
        self.LabelTime.configure(disabledforeground="#a3a3a3")
        self.LabelTime.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelTime.configure(foreground="white")
        self.LabelTime.configure(highlightbackground="#d9d9d9")
        self.LabelTime.configure(highlightcolor="black")
        self.LabelTime.configure(text='''Time:''')

        self.displaytime = tk.Label(self.Frame1)
        self.displaytime.place(relx=0.189, rely=0.097, height=44, width=155)
        self.displaytime.configure(activebackground="#f9f9f9")
        self.displaytime.configure(activeforeground="black")
        self.displaytime.configure(background="black")
        self.displaytime.configure(disabledforeground="#a3a3a3")
        self.displaytime.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.displaytime.configure(foreground="white")
        self.displaytime.configure(highlightbackground="#d9d9d9")
        self.displaytime.configure(highlightcolor="black")

        self.customercount = tk.Label(self.Frame1)
        self.customercount.place(relx=0.152, rely=0.408, height=43, width=155)
        self.customercount.configure(activebackground="#f9f9f9")
        self.customercount.configure(activeforeground="black")
        self.customercount.configure(background="black")
        self.customercount.configure(disabledforeground="#a3a3a3")
        self.customercount.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold -underline 1")
        self.customercount.configure(foreground="white")
        self.customercount.configure(highlightbackground="#d9d9d9")
        self.customercount.configure(highlightcolor="black")
        self.customercount.configure(text='''0''')

        self.LabellEmp = tk.Label(self.Frame1)
        self.LabellEmp.place(relx=0.189, rely=0.602, height=43, width=155)
        self.LabellEmp.configure(activebackground="#f9f9f9")
        self.LabellEmp.configure(activeforeground="black")
        self.LabellEmp.configure(background="black")
        self.LabellEmp.configure(disabledforeground="#a3a3a3")
        self.LabellEmp.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabellEmp.configure(foreground="white")
        self.LabellEmp.configure(highlightbackground="#d9d9d9")
        self.LabellEmp.configure(highlightcolor="black")
        self.LabellEmp.configure(text='''Total Employees:''')

        self.empcount = tk.Label(self.Frame1)
        self.empcount.place(relx=0.152, rely=0.697, height=44, width=155)
        self.empcount.configure(activebackground="#f9f9f9")
        self.empcount.configure(activeforeground="black")
        self.empcount.configure(background="black")
        self.empcount.configure(disabledforeground="#a3a3a3")
        self.empcount.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold -underline 1")
        self.empcount.configure(foreground="white")
        self.empcount.configure(highlightbackground="#d9d9d9")
        self.empcount.configure(highlightcolor="black")
        self.empcount.configure(text='''0''')

        self.Label2 = tk.Label(self.TNotebook1_t1)
        self.Label2.place(relx=-0.011, rely=0.0, height=51, width=962)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#000080")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(font="-family {Arial} -size 18 -weight bold")
        self.Label2.configure(foreground="white")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''Coffee Shop Management System''')

        self.Buttonlogout = tk.Button(self.TNotebook1_t1)
        self.Buttonlogout.place(relx=0.893, rely=0.015, height=34, width=87)
        self.Buttonlogout.configure(activebackground="#ececec")
        self.Buttonlogout.configure(activeforeground="#000000")
        self.Buttonlogout.configure(background="#000080")
        self.Buttonlogout.configure(command=coffeemanagementsystem_support.logout)
        self.Buttonlogout.configure(disabledforeground="#a3a3a3")
        self.Buttonlogout.configure(font="-family {Yu Gothic UI} -size 13")
        self.Buttonlogout.configure(foreground="yellow")
        self.Buttonlogout.configure(highlightbackground="#d9d9d9")
        self.Buttonlogout.configure(highlightcolor="black")
        self.Buttonlogout.configure(pady="0")
        self.Buttonlogout.configure(text='''Logout''')

        self.Label4 = tk.Label(self.TNotebook1_login)
        self.Label4.place(relx=0.305, rely=0.015, height=90, width=313)
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(background="#80ffff")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(font="-family {Segoe UI Historic} -size 18 -weight bold")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(text='''Login''')

        self.Labelid = tk.Label(self.TNotebook1_login)
        self.Labelid.place(relx=0.011, rely=0.213, height=90, width=314)
        self.Labelid.configure(activebackground="#f9f9f9")
        self.Labelid.configure(activeforeground="black")
        self.Labelid.configure(background="#80ffff")
        self.Labelid.configure(disabledforeground="#a3a3a3")
        self.Labelid.configure(font="-family {Segoe UI Light} -size 13 -weight bold")
        self.Labelid.configure(foreground="#000000")
        self.Labelid.configure(highlightbackground="#d9d9d9")
        self.Labelid.configure(highlightcolor="black")
        self.Labelid.configure(text='''Enter manager id''')

        self.Labelpassword = tk.Label(self.TNotebook1_login)
        self.Labelpassword.place(relx=0.0, rely=0.396, height=90, width=313)
        self.Labelpassword.configure(activebackground="#f9f9f9")
        self.Labelpassword.configure(activeforeground="black")
        self.Labelpassword.configure(background="#80ffff")
        self.Labelpassword.configure(disabledforeground="#a3a3a3")
        self.Labelpassword.configure(font="-family {Segoe UI Light} -size 13 -weight bold")
        self.Labelpassword.configure(foreground="#000000")
        self.Labelpassword.configure(highlightbackground="#d9d9d9")
        self.Labelpassword.configure(highlightcolor="black")
        self.Labelpassword.configure(text='''Enter password''')

        self.Entryid = tk.Entry(self.TNotebook1_login)
        self.Entryid.place(relx=0.436, rely=0.274, height=20, relwidth=0.195)
        self.Entryid.configure(background="white")
        self.Entryid.configure(disabledforeground="#a3a3a3")
        self.Entryid.configure(font="-family {Arial} -size 13")
        self.Entryid.configure(foreground="#000000")
        self.Entryid.configure(highlightbackground="#d9d9d9")
        self.Entryid.configure(highlightcolor="black")
        self.Entryid.configure(insertbackground="black")
        self.Entryid.configure(selectbackground="blue")
        self.Entryid.configure(selectforeground="white",textvariable=coffeemanagementsystem_support.manageid)

        self.Entrypass = tk.Entry(self.TNotebook1_login)
        self.Entrypass.place(relx=0.436, rely=0.458, height=20, relwidth=0.195)
        self.Entrypass.configure(background="white")
        self.Entrypass.configure(disabledforeground="#a3a3a3")
        self.Entrypass.configure(font="-family {Arial} -size 13")
        self.Entrypass.configure(foreground="#000000")
        self.Entrypass.configure(highlightbackground="#d9d9d9")
        self.Entrypass.configure(highlightcolor="black")
        self.Entrypass.configure(insertbackground="black")
        self.Entrypass.configure(selectbackground="blue")
        self.Entrypass.configure(selectforeground="white",textvariable=coffeemanagementsystem_support.password,show='*')

        self.Button2 = tk.Button(self.TNotebook1_login)
        self.Button2.place(relx=0.392, rely=0.61, height=104, width=157)
        self.Button2.configure(activebackground="#ececec")
        self.Button2.configure(activeforeground="#000000")
        self.Button2.configure(background="#80ffff")
        self.Button2.configure(command=coffeemanagementsystem_support.submitaccess)
        self.Button2.configure(disabledforeground="#a3a3a3")
        self.Button2.configure(font="-family {Yu Gothic UI Semibold} -size 12 -weight bold")
        self.Button2.configure(foreground="#000000")
        self.Button2.configure(highlightbackground="#d9d9d9")
        self.Button2.configure(highlightcolor="black")
        self.Button2.configure(pady="0")
        self.Button2.configure(relief="groove")
        self.Button2.configure(text='''Submit''')

        self.LabelCustomer = tk.Label(self.TNotebook1_customer)
        self.LabelCustomer.place(relx=0.0, rely=0.0, height=93, width=946)
        self.LabelCustomer.configure(activebackground="#f9f9f9")
        self.LabelCustomer.configure(activeforeground="black")
        self.LabelCustomer.configure(background="#000080")
        self.LabelCustomer.configure(disabledforeground="#a3a3a3")
        self.LabelCustomer.configure(font="-family {Arial} -size 18 -weight bold -underline 1")
        self.LabelCustomer.configure(foreground="white")
        self.LabelCustomer.configure(highlightbackground="#d9d9d9")
        self.LabelCustomer.configure(highlightcolor="black")
        self.LabelCustomer.configure(text='''Manage Customer Details''')

        self.ManageCustomernb = ttk.Notebook(self.TNotebook1_customer)
        self.ManageCustomernb.place(relx=0.0, rely=0.142, relheight=0.878
                , relwidth=1.007)
        self.ManageCustomernb.configure(takefocus="")
        self.ManageCustomernb_tb1 = tk.Frame(self.ManageCustomernb)
        self.ManageCustomernb.add(self.ManageCustomernb_tb1, padding=3)
        self.ManageCustomernb.tab(0, text="Add    ", compound="left"
                ,underline="-1", )
        self.ManageCustomernb_tb1.configure(background="white")
        self.ManageCustomernb_tb1.configure(highlightbackground="#d9d9d9")
        self.ManageCustomernb_tb1.configure(highlightcolor="black")
        self.ManageCustomernb_tb2 = tk.Frame(self.ManageCustomernb)
        self.ManageCustomernb.add(self.ManageCustomernb_tb2, padding=3)
        self.ManageCustomernb.tab(1, text="Delete    ", compound="left"
                ,underline="-1", )
        self.ManageCustomernb_tb2.configure(background="white")
        self.ManageCustomernb_tb2.configure(highlightbackground="#d9d9d9")
        self.ManageCustomernb_tb2.configure(highlightcolor="black")
        self.ManageCustomernb_tb3 = tk.Frame(self.ManageCustomernb)
        self.ManageCustomernb.add(self.ManageCustomernb_tb3, padding=3)
        self.ManageCustomernb.tab(2, text="Update    ", compound="none"
                ,underline="-1", )
        self.ManageCustomernb_tb3.configure(background="white")
        self.ManageCustomernb_tb3.configure(highlightbackground="#d9d9d9")
        self.ManageCustomernb_tb3.configure(highlightcolor="black")
        self.ManageCustomernb_t1 = tk.Frame(self.ManageCustomernb)
        self.ManageCustomernb.add(self.ManageCustomernb_t1, padding=3)
        self.ManageCustomernb.tab(3, text="View Details", compound="none"
                ,underline="-1", )
        self.ManageCustomernb_t1.configure(background="white")
        self.ManageCustomernb_t1.configure(highlightbackground="#d9d9d9")
        self.ManageCustomernb_t1.configure(highlightcolor="black")

        self.LabelCname = tk.Label(self.ManageCustomernb_tb1)
        self.LabelCname.place(relx=0.011, rely=0.055, height=51, width=114)
        self.LabelCname.configure(activebackground="#f9f9f9")
        self.LabelCname.configure(activeforeground="black")
        self.LabelCname.configure(background="white")
        self.LabelCname.configure(disabledforeground="#a3a3a3")
        self.LabelCname.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelCname.configure(foreground="#000000")
        self.LabelCname.configure(highlightbackground="#d9d9d9")
        self.LabelCname.configure(highlightcolor="black")
        self.LabelCname.configure(text='''Name''')

        self.EntryCname = tk.Entry(self.ManageCustomernb_tb1)
        self.EntryCname.place(relx=0.148, rely=0.092, height=20, relwidth=0.226)
        self.EntryCname.configure(background="#80ffff")
        self.EntryCname.configure(disabledforeground="#a3a3a3")
        self.EntryCname.configure(font="-family {Arial} -size 14")
        self.EntryCname.configure(foreground="#000000")
        self.EntryCname.configure(highlightbackground="#d9d9d9")
        self.EntryCname.configure(highlightcolor="black")
        self.EntryCname.configure(insertbackground="black")
        self.EntryCname.configure(selectbackground="blue")
        self.EntryCname.configure(selectforeground="white")
        self.EntryCname.configure(textvariable=coffeemanagementsystem_support.cname)

        self.LabelCno = tk.Label(self.ManageCustomernb_tb1)
        self.LabelCno.place(relx=0.011, rely=0.165, height=51, width=114)
        self.LabelCno.configure(activebackground="#f9f9f9")
        self.LabelCno.configure(activeforeground="black")
        self.LabelCno.configure(background="white")
        self.LabelCno.configure(disabledforeground="#a3a3a3")
        self.LabelCno.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelCno.configure(foreground="#000000")
        self.LabelCno.configure(highlightbackground="#d9d9d9")
        self.LabelCno.configure(highlightcolor="black")
        self.LabelCno.configure(text='''Phone No.''')

        self.EntryCphone = tk.Entry(self.ManageCustomernb_tb1)
        self.EntryCphone.place(relx=0.146, rely=0.199, height=20, relwidth=0.226)

        self.EntryCphone.configure(background="#80ffff")
        self.EntryCphone.configure(disabledforeground="#a3a3a3")
        self.EntryCphone.configure(font="-family {Arial} -size 14")
        self.EntryCphone.configure(foreground="#000000")
        self.EntryCphone.configure(highlightbackground="#d9d9d9")
        self.EntryCphone.configure(highlightcolor="black")
        self.EntryCphone.configure(insertbackground="black")
        self.EntryCphone.configure(selectbackground="blue")
        self.EntryCphone.configure(selectforeground="white")
        self.EntryCphone.configure(textvariable=coffeemanagementsystem_support.cphoneno)

        self.LabelCage = tk.Label(self.ManageCustomernb_tb1)
        self.LabelCage.place(relx=0.011, rely=0.276, height=51, width=114)
        self.LabelCage.configure(activebackground="#f9f9f9")
        self.LabelCage.configure(activeforeground="black")
        self.LabelCage.configure(background="white")
        self.LabelCage.configure(disabledforeground="#a3a3a3")
        self.LabelCage.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelCage.configure(foreground="#000000")
        self.LabelCage.configure(highlightbackground="#d9d9d9")
        self.LabelCage.configure(highlightcolor="black")
        self.LabelCage.configure(text='''Age''')

        self.EntryCage = tk.Entry(self.ManageCustomernb_tb1)
        self.EntryCage.place(relx=0.145, rely=0.314, height=20, relwidth=0.057)
        self.EntryCage.configure(background="#80ffff")
        self.EntryCage.configure(disabledforeground="#a3a3a3")
        self.EntryCage.configure(font="-family {Arial} -size 14")
        self.EntryCage.configure(foreground="#000000")
        self.EntryCage.configure(highlightbackground="#d9d9d9")
        self.EntryCage.configure(highlightcolor="black")
        self.EntryCage.configure(insertbackground="black")
        self.EntryCage.configure(selectbackground="blue")
        self.EntryCage.configure(selectforeground="white")
        self.EntryCage.configure(textvariable=coffeemanagementsystem_support.cage)

        self.LabelCEmail = tk.Label(self.ManageCustomernb_tb1)
        self.LabelCEmail.place(relx=0.011, rely=0.403, height=49, width=114)
        self.LabelCEmail.configure(activebackground="#f9f9f9")
        self.LabelCEmail.configure(activeforeground="black")
        self.LabelCEmail.configure(background="white")
        self.LabelCEmail.configure(disabledforeground="#a3a3a3")
        self.LabelCEmail.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelCEmail.configure(foreground="#000000")
        self.LabelCEmail.configure(highlightbackground="#d9d9d9")
        self.LabelCEmail.configure(highlightcolor="black")
        self.LabelCEmail.configure(text='''E-Mail''')

        self.EntryCemail = tk.Entry(self.ManageCustomernb_tb1)
        self.EntryCemail.place(relx=0.148, rely=0.432, height=20, relwidth=0.152)

        self.EntryCemail.configure(background="#80ffff")
        self.EntryCemail.configure(disabledforeground="#a3a3a3")
        self.EntryCemail.configure(font="-family {Arial} -size 14")
        self.EntryCemail.configure(foreground="#000000")
        self.EntryCemail.configure(highlightbackground="#d9d9d9")
        self.EntryCemail.configure(highlightcolor="black")
        self.EntryCemail.configure(insertbackground="black")
        self.EntryCemail.configure(selectbackground="blue")
        self.EntryCemail.configure(selectforeground="white")
        self.EntryCemail.configure(textvariable=coffeemanagementsystem_support.Cemail)

        self.Comboemails_1 = ttk.Combobox(self.ManageCustomernb_tb1)
        self.Comboemails_1.place(relx=0.316, rely=0.426, relheight=0.057
                , relwidth=0.161)
        self.value_list = ['@gmail.com','@yahoo.in','@hotmail.com',]
        self.Comboemails_1.configure(values=self.value_list)
        self.Comboemails_1.configure(font="-family {Segoe UI Semibold} -size 10 -weight bold")
        self.Comboemails_1.configure(textvariable=coffeemanagementsystem_support.combobox)
        self.Comboemails_1.configure(takefocus="")

        self.ButtonCadddetails = tk.Button(self.ManageCustomernb_tb1)
        self.ButtonCadddetails.place(relx=0.126, rely=0.772, height=74
                , width=187)
        self.ButtonCadddetails.configure(activebackground="#ececec")
        self.ButtonCadddetails.configure(activeforeground="#000000")
        self.ButtonCadddetails.configure(background="#f7eafd")
        self.ButtonCadddetails.configure(command=coffeemanagementsystem_support.adddetailscus)
        self.ButtonCadddetails.configure(disabledforeground="#a3a3a3")
        self.ButtonCadddetails.configure(font="-family {Yu Gothic Medium} -size 13 -weight bold")
        self.ButtonCadddetails.configure(foreground="black")
        self.ButtonCadddetails.configure(highlightbackground="#d9d9d9")
        self.ButtonCadddetails.configure(highlightcolor="black")
        self.ButtonCadddetails.configure(pady="0")
        self.ButtonCadddetails.configure(relief="flat")
        self.ButtonCadddetails.configure(text='''Add Details''')

        self.Label3_1 = tk.Label(self.ManageCustomernb_tb1)
        self.Label3_1.place(relx=0.485, rely=0.018, height=358, width=454)
        self.Label3_1.configure(activebackground="#f9f9f9")
        self.Label3_1.configure(activeforeground="black")
        self.Label3_1.configure(background="#d9d9d9")
        self.Label3_1.configure(disabledforeground="#a3a3a3")
        self.Label3_1.configure(foreground="#000000")
        self.Label3_1.configure(highlightbackground="#d9d9d9")
        self.Label3_1.configure(highlightcolor="black")
        photo_location = os.path.join(prog_location,"customerimg.png")
        global _img1
        _img1 = tk.PhotoImage(file=photo_location)
        self.Label3_1.configure(image=_img1)
        self.Label3_1.configure(text='''Label''')

        self.ButtonCremoveall = tk.Button(self.ManageCustomernb_tb2)
        self.ButtonCremoveall.place(relx=0.126, rely=0.827, height=74, width=187)

        self.ButtonCremoveall.configure(activebackground="#ececec")
        self.ButtonCremoveall.configure(activeforeground="#000000")
        self.ButtonCremoveall.configure(background="#f7eafd")
        self.ButtonCremoveall.configure(command=coffeemanagementsystem_support.Cremoveall)
        self.ButtonCremoveall.configure(disabledforeground="#a3a3a3")
        self.ButtonCremoveall.configure(font="-family {Yu Gothic Medium} -size 13 -weight bold")
        self.ButtonCremoveall.configure(foreground="black")
        self.ButtonCremoveall.configure(highlightbackground="#d9d9d9")
        self.ButtonCremoveall.configure(highlightcolor="black")
        self.ButtonCremoveall.configure(pady="0")
        self.ButtonCremoveall.configure(relief="flat")
        self.ButtonCremoveall.configure(text='''Remove All''')

        self.style.configure('Treeview',  font="TkDefaultFont")
        self.ScrolledCtreeviewdelete = ScrolledTreeView(self.ManageCustomernb_tb2)
        self.ScrolledCtreeviewdelete.place(relx=0.021, rely=0.037
                , relheight=0.767, relwidth=0.917)
        self.ScrolledCtreeviewdelete.configure(columns="Col1 Col2 Col3 Col4")
        # build_treeview_support starting.
        self.ScrolledCtreeviewdelete.heading("#0",anchor="center")
        self.ScrolledCtreeviewdelete.column("#0",width="0")
        self.ScrolledCtreeviewdelete.column("#0",minwidth="0")
        self.ScrolledCtreeviewdelete.column("#0",stretch="0")
        self.ScrolledCtreeviewdelete.column("#0",anchor="w")
        self.ScrolledCtreeviewdelete.heading("Col1",text="Name")
        self.ScrolledCtreeviewdelete.heading("Col1",anchor="center")
        self.ScrolledCtreeviewdelete.column("Col1",width="213")
        self.ScrolledCtreeviewdelete.column("Col1",minwidth="20")
        self.ScrolledCtreeviewdelete.column("Col1",stretch="1")
        self.ScrolledCtreeviewdelete.column("Col1",anchor="w")
        self.ScrolledCtreeviewdelete.heading("Col2",text="Phone No.")
        self.ScrolledCtreeviewdelete.heading("Col2",anchor="center")
        self.ScrolledCtreeviewdelete.column("Col2",width="213")
        self.ScrolledCtreeviewdelete.column("Col2",minwidth="20")
        self.ScrolledCtreeviewdelete.column("Col2",stretch="1")
        self.ScrolledCtreeviewdelete.column("Col2",anchor="w")
        self.ScrolledCtreeviewdelete.heading("Col3",text="Age")
        self.ScrolledCtreeviewdelete.heading("Col3",anchor="center")
        self.ScrolledCtreeviewdelete.column("Col3",width="212")
        self.ScrolledCtreeviewdelete.column("Col3",minwidth="20")
        self.ScrolledCtreeviewdelete.column("Col3",stretch="1")
        self.ScrolledCtreeviewdelete.column("Col3",anchor="w")
        self.ScrolledCtreeviewdelete.heading("Col4",text="Email")
        self.ScrolledCtreeviewdelete.heading("Col4",anchor="center")
        self.ScrolledCtreeviewdelete.column("Col4",width="213")
        self.ScrolledCtreeviewdelete.column("Col4",minwidth="20")
        self.ScrolledCtreeviewdelete.column("Col4",stretch="1")
        self.ScrolledCtreeviewdelete.column("Col4",anchor="w")

        self.ButtonCreselc = tk.Button(self.ManageCustomernb_tb2)
        self.ButtonCreselc.place(relx=0.632, rely=0.827, height=74, width=187)
        self.ButtonCreselc.configure(activebackground="#ececec")
        self.ButtonCreselc.configure(activeforeground="#000000")
        self.ButtonCreselc.configure(background="#f7eafd")
        self.ButtonCreselc.configure(command=coffeemanagementsystem_support.removeCselected)
        self.ButtonCreselc.configure(disabledforeground="#a3a3a3")
        self.ButtonCreselc.configure(font="-family {Yu Gothic Medium} -size 13 -weight bold")
        self.ButtonCreselc.configure(foreground="black")
        self.ButtonCreselc.configure(highlightbackground="#d9d9d9")
        self.ButtonCreselc.configure(highlightcolor="black")
        self.ButtonCreselc.configure(pady="0")
        self.ButtonCreselc.configure(relief="flat")
        self.ButtonCreselc.configure(text='''Remove Selected''')

        self.ButtonCviewd = tk.Button(self.ManageCustomernb_tb2)
        self.ButtonCviewd.place(relx=0.379, rely=0.827, height=74, width=187)
        self.ButtonCviewd.configure(activebackground="#ececec")
        self.ButtonCviewd.configure(activeforeground="#000000")
        self.ButtonCviewd.configure(background="#f7eafd")
        self.ButtonCviewd.configure(command=coffeemanagementsystem_support.viewcusdetails)
        self.ButtonCviewd.configure(disabledforeground="#a3a3a3")
        self.ButtonCviewd.configure(font="-family {Yu Gothic Medium} -size 13 -weight bold")
        self.ButtonCviewd.configure(foreground="black")
        self.ButtonCviewd.configure(highlightbackground="#d9d9d9")
        self.ButtonCviewd.configure(highlightcolor="black")
        self.ButtonCviewd.configure(pady="0")
        self.ButtonCviewd.configure(relief="flat")
        self.ButtonCviewd.configure(text='''View Details''')

        self.ScrolledCtreeviewupdate = ScrolledTreeView(self.ManageCustomernb_tb3)
        self.ScrolledCtreeviewupdate.place(relx=0.063, rely=0.037
                , relheight=0.638, relwidth=0.864)
        self.ScrolledCtreeviewupdate.configure(columns="Col4 Col5 Col6 Col7")
        # build_treeview_support starting.
        self.ScrolledCtreeviewupdate.heading("#0",anchor="center")
        self.ScrolledCtreeviewupdate.column("#0",width="0")
        self.ScrolledCtreeviewupdate.column("#0",minwidth="0")
        self.ScrolledCtreeviewupdate.column("#0",stretch="0")
        self.ScrolledCtreeviewupdate.column("#0",anchor="w")
        self.ScrolledCtreeviewupdate.heading("Col4",text="Name")
        self.ScrolledCtreeviewupdate.heading("Col4",anchor="center")
        self.ScrolledCtreeviewupdate.column("Col4",width="200")
        self.ScrolledCtreeviewupdate.column("Col4",minwidth="20")
        self.ScrolledCtreeviewupdate.column("Col4",stretch="1")
        self.ScrolledCtreeviewupdate.column("Col4",anchor="w")
        self.ScrolledCtreeviewupdate.heading("Col5",text="Phone No.")
        self.ScrolledCtreeviewupdate.heading("Col5",anchor="center")
        self.ScrolledCtreeviewupdate.column("Col5",width="200")
        self.ScrolledCtreeviewupdate.column("Col5",minwidth="20")
        self.ScrolledCtreeviewupdate.column("Col5",stretch="1")
        self.ScrolledCtreeviewupdate.column("Col5",anchor="w")
        self.ScrolledCtreeviewupdate.heading("Col6",text="Age")
        self.ScrolledCtreeviewupdate.heading("Col6",anchor="center")
        self.ScrolledCtreeviewupdate.column("Col6",width="200")
        self.ScrolledCtreeviewupdate.column("Col6",minwidth="20")
        self.ScrolledCtreeviewupdate.column("Col6",stretch="1")
        self.ScrolledCtreeviewupdate.column("Col6",anchor="w")
        self.ScrolledCtreeviewupdate.heading("Col7",text="Email")
        self.ScrolledCtreeviewupdate.heading("Col7",anchor="center")
        self.ScrolledCtreeviewupdate.column("Col7",width="201")
        self.ScrolledCtreeviewupdate.column("Col7",minwidth="20")
        self.ScrolledCtreeviewupdate.column("Col7",stretch="1")
        self.ScrolledCtreeviewupdate.column("Col7",anchor="w")

        self.LabelCname_2 = tk.Label(self.ManageCustomernb_tb3)
        self.LabelCname_2.place(relx=0.011, rely=0.699, height=31, width=74)
        self.LabelCname_2.configure(activebackground="#f9f9f9")
        self.LabelCname_2.configure(activeforeground="black")
        self.LabelCname_2.configure(background="white")
        self.LabelCname_2.configure(disabledforeground="#a3a3a3")
        self.LabelCname_2.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelCname_2.configure(foreground="#000000")
        self.LabelCname_2.configure(highlightbackground="#d9d9d9")
        self.LabelCname_2.configure(highlightcolor="black")
        self.LabelCname_2.configure(text='''Name''')

        self.EntryCname_2 = tk.Entry(self.ManageCustomernb_tb3)
        self.EntryCname_2.place(relx=0.105, rely=0.717, height=20
                , relwidth=0.173)
        self.EntryCname_2.configure(background="#80ffff")
        self.EntryCname_2.configure(disabledforeground="#a3a3a3")
        self.EntryCname_2.configure(font="-family {Arial} -size 14")
        self.EntryCname_2.configure(foreground="#000000")
        self.EntryCname_2.configure(highlightbackground="#d9d9d9")
        self.EntryCname_2.configure(highlightcolor="black")
        self.EntryCname_2.configure(insertbackground="black")
        self.EntryCname_2.configure(selectbackground="blue")
        self.EntryCname_2.configure(selectforeground="white")
        self.EntryCname_2.configure(textvariable=coffeemanagementsystem_support.cname)

        self.LabelCno_2 = tk.Label(self.ManageCustomernb_tb3)
        self.LabelCno_2.place(relx=0.011, rely=0.772, height=31, width=84)
        self.LabelCno_2.configure(activebackground="#f9f9f9")
        self.LabelCno_2.configure(activeforeground="black")
        self.LabelCno_2.configure(background="white")
        self.LabelCno_2.configure(disabledforeground="#a3a3a3")
        self.LabelCno_2.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelCno_2.configure(foreground="#000000")
        self.LabelCno_2.configure(highlightbackground="#d9d9d9")
        self.LabelCno_2.configure(highlightcolor="black")
        self.LabelCno_2.configure(text='''Phone No.''')

        self.EntryCphone_2 = tk.Entry(self.ManageCustomernb_tb3)
        self.EntryCphone_2.place(relx=0.105, rely=0.79, height=20
                , relwidth=0.173)
        self.EntryCphone_2.configure(background="#80ffff")
        self.EntryCphone_2.configure(disabledforeground="#a3a3a3")
        self.EntryCphone_2.configure(font="-family {Arial} -size 14")
        self.EntryCphone_2.configure(foreground="#000000")
        self.EntryCphone_2.configure(highlightbackground="#d9d9d9")
        self.EntryCphone_2.configure(highlightcolor="black")
        self.EntryCphone_2.configure(insertbackground="black")
        self.EntryCphone_2.configure(selectbackground="blue")
        self.EntryCphone_2.configure(selectforeground="white")
        self.EntryCphone_2.configure(textvariable=coffeemanagementsystem_support.cphoneno)

        self.LabelCage_2 = tk.Label(self.ManageCustomernb_tb3)
        self.LabelCage_2.place(relx=0.0, rely=0.846, height=31, width=84)
        self.LabelCage_2.configure(activebackground="#f9f9f9")
        self.LabelCage_2.configure(activeforeground="black")
        self.LabelCage_2.configure(background="white")
        self.LabelCage_2.configure(disabledforeground="#a3a3a3")
        self.LabelCage_2.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelCage_2.configure(foreground="#000000")
        self.LabelCage_2.configure(highlightbackground="#d9d9d9")
        self.LabelCage_2.configure(highlightcolor="black")
        self.LabelCage_2.configure(text='''Age''')

        self.EntryCage_2 = tk.Entry(self.ManageCustomernb_tb3)
        self.EntryCage_2.place(relx=0.105, rely=0.864, height=20, relwidth=0.057)

        self.EntryCage_2.configure(background="#80ffff")
        self.EntryCage_2.configure(disabledforeground="#a3a3a3")
        self.EntryCage_2.configure(font="-family {Arial} -size 14")
        self.EntryCage_2.configure(foreground="#000000")
        self.EntryCage_2.configure(highlightbackground="#d9d9d9")
        self.EntryCage_2.configure(highlightcolor="black")
        self.EntryCage_2.configure(insertbackground="black")
        self.EntryCage_2.configure(selectbackground="blue")
        self.EntryCage_2.configure(selectforeground="white")
        self.EntryCage_2.configure(textvariable=coffeemanagementsystem_support.cage)

        self.LabelCEmail_2 = tk.Label(self.ManageCustomernb_tb3)
        self.LabelCEmail_2.place(relx=0.306, rely=0.717, height=31, width=74)
        self.LabelCEmail_2.configure(activebackground="#f9f9f9")
        self.LabelCEmail_2.configure(activeforeground="black")
        self.LabelCEmail_2.configure(background="white")
        self.LabelCEmail_2.configure(disabledforeground="#a3a3a3")
        self.LabelCEmail_2.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelCEmail_2.configure(foreground="#000000")
        self.LabelCEmail_2.configure(highlightbackground="#d9d9d9")
        self.LabelCEmail_2.configure(highlightcolor="black")
        self.LabelCEmail_2.configure(text='''E-Mail''')

        self.EntryCemail_2 = tk.Entry(self.ManageCustomernb_tb3)
        self.EntryCemail_2.place(relx=0.39, rely=0.726, height=20
                , relwidth=0.152)
        self.EntryCemail_2.configure(background="#80ffff")
        self.EntryCemail_2.configure(disabledforeground="#a3a3a3")
        self.EntryCemail_2.configure(font="-family {Arial} -size 14")
        self.EntryCemail_2.configure(foreground="#000000")
        self.EntryCemail_2.configure(highlightbackground="#d9d9d9")
        self.EntryCemail_2.configure(highlightcolor="black")
        self.EntryCemail_2.configure(insertbackground="black")
        self.EntryCemail_2.configure(selectbackground="blue")
        self.EntryCemail_2.configure(selectforeground="white")
        self.EntryCemail_2.configure(textvariable=coffeemanagementsystem_support.Cemail)

        self.ButtonCupdate = tk.Button(self.ManageCustomernb_tb3)
        self.ButtonCupdate.place(relx=0.738, rely=0.699, height=64, width=187)
        self.ButtonCupdate.configure(activebackground="#ececec")
        self.ButtonCupdate.configure(activeforeground="#000000")
        self.ButtonCupdate.configure(background="#f7eafd")
        self.ButtonCupdate.configure(command=coffeemanagementsystem_support.updaterecordcus)
        self.ButtonCupdate.configure(disabledforeground="#a3a3a3")
        self.ButtonCupdate.configure(font="-family {Yu Gothic Medium} -size 13 -weight bold")
        self.ButtonCupdate.configure(foreground="black")
        self.ButtonCupdate.configure(highlightbackground="#d9d9d9")
        self.ButtonCupdate.configure(highlightcolor="black")
        self.ButtonCupdate.configure(pady="0")
        self.ButtonCupdate.configure(relief="flat")
        self.ButtonCupdate.configure(text='''Update Record''')

        self.ButtonCviewu = tk.Button(self.ManageCustomernb_tb3)
        self.ButtonCviewu.place(relx=0.738, rely=0.824, height=64, width=187)
        self.ButtonCviewu.configure(activebackground="#ececec")
        self.ButtonCviewu.configure(activeforeground="#000000")
        self.ButtonCviewu.configure(background="#f7eafd")
        self.ButtonCviewu.configure(command=coffeemanagementsystem_support.viewcusdetails)
        self.ButtonCviewu.configure(disabledforeground="#a3a3a3")
        self.ButtonCviewu.configure(font="-family {Yu Gothic Medium} -size 13 -weight bold")
        self.ButtonCviewu.configure(foreground="black")
        self.ButtonCviewu.configure(highlightbackground="#d9d9d9")
        self.ButtonCviewu.configure(highlightcolor="black")
        self.ButtonCviewu.configure(pady="0")
        self.ButtonCviewu.configure(relief="flat")
        self.ButtonCviewu.configure(text='''View Details''')

        self.ComboCemailsu = ttk.Combobox(self.ManageCustomernb_tb3)
        self.ComboCemailsu.place(relx=0.558, rely=0.713, relheight=0.057
                , relwidth=0.138)
        self.value_list = ['@gmail.com','@yahoo.in','@hotmail.com',]
        self.ComboCemailsu.configure(values=self.value_list)
        self.ComboCemailsu.configure(font="-family {Segoe UI Semibold} -size 10 -weight bold")
        self.ComboCemailsu.configure(textvariable=coffeemanagementsystem_support.Ccombobox)
        self.ComboCemailsu.configure(takefocus="")

        self.ScrolledCtreeviewdetails = ScrolledTreeView(self.ManageCustomernb_t1)
        self.ScrolledCtreeviewdetails.place(relx=0.053, rely=0.11
                , relheight=0.546, relwidth=0.891)
        self.ScrolledCtreeviewdetails.configure(columns="Col4 Col5 Col6 Col7")
        # build_treeview_support starting.
        self.ScrolledCtreeviewdetails.heading("#0",anchor="center")
        self.ScrolledCtreeviewdetails.column("#0",width="0")
        self.ScrolledCtreeviewdetails.column("#0",minwidth="0")
        self.ScrolledCtreeviewdetails.column("#0",stretch="0")
        self.ScrolledCtreeviewdetails.column("#0",anchor="w")
        self.ScrolledCtreeviewdetails.heading("Col4",text="Name")
        self.ScrolledCtreeviewdetails.heading("Col4",anchor="center")
        self.ScrolledCtreeviewdetails.column("Col4",width="186")
        self.ScrolledCtreeviewdetails.column("Col4",minwidth="20")
        self.ScrolledCtreeviewdetails.column("Col4",stretch="1")
        self.ScrolledCtreeviewdetails.column("Col4",anchor="w")
        self.ScrolledCtreeviewdetails.heading("Col5",text="Phone No.")
        self.ScrolledCtreeviewdetails.heading("Col5",anchor="center")
        self.ScrolledCtreeviewdetails.column("Col5",width="166")
        self.ScrolledCtreeviewdetails.column("Col5",minwidth="20")
        self.ScrolledCtreeviewdetails.column("Col5",stretch="1")
        self.ScrolledCtreeviewdetails.column("Col5",anchor="w")
        self.ScrolledCtreeviewdetails.heading("Col6",text="Age")
        self.ScrolledCtreeviewdetails.heading("Col6",anchor="center")
        self.ScrolledCtreeviewdetails.column("Col6",width="227")
        self.ScrolledCtreeviewdetails.column("Col6",minwidth="20")
        self.ScrolledCtreeviewdetails.column("Col6",stretch="1")
        self.ScrolledCtreeviewdetails.column("Col6",anchor="w")
        self.ScrolledCtreeviewdetails.heading("Col7",text="Email")
        self.ScrolledCtreeviewdetails.heading("Col7",anchor="center")
        self.ScrolledCtreeviewdetails.column("Col7",width="248")
        self.ScrolledCtreeviewdetails.column("Col7",minwidth="20")
        self.ScrolledCtreeviewdetails.column("Col7",stretch="1")
        self.ScrolledCtreeviewdetails.column("Col7",anchor="w")

        self.ButtonCsearch = tk.Button(self.ManageCustomernb_t1)
        self.ButtonCsearch.place(relx=0.643, rely=0.018, height=34, width=157)
        self.ButtonCsearch.configure(activebackground="#ececec")
        self.ButtonCsearch.configure(activeforeground="#000000")
        self.ButtonCsearch.configure(background="#f7eafd")
        self.ButtonCsearch.configure(command=coffeemanagementsystem_support.searchcustomer)
        self.ButtonCsearch.configure(disabledforeground="#a3a3a3")
        self.ButtonCsearch.configure(font="-family {Yu Gothic Medium} -size 13 -weight bold")
        self.ButtonCsearch.configure(foreground="black")
        self.ButtonCsearch.configure(highlightbackground="#d9d9d9")
        self.ButtonCsearch.configure(highlightcolor="black")
        self.ButtonCsearch.configure(pady="0")
        self.ButtonCsearch.configure(relief="flat")
        self.ButtonCsearch.configure(text='''Search''')

        self.EntryCsearchname = tk.Entry(self.ManageCustomernb_t1)
        self.EntryCsearchname.place(relx=0.261, rely=0.026, height=20
                , relwidth=0.173)
        self.EntryCsearchname.configure(background="#80ffff")
        self.EntryCsearchname.configure(disabledforeground="#a3a3a3")
        self.EntryCsearchname.configure(font="-family {Arial} -size 14")
        self.EntryCsearchname.configure(foreground="#000000")
        self.EntryCsearchname.configure(highlightbackground="#d9d9d9")
        self.EntryCsearchname.configure(highlightcolor="black")
        self.EntryCsearchname.configure(insertbackground="black")
        self.EntryCsearchname.configure(selectbackground="blue")
        self.EntryCsearchname.configure(selectforeground="white")
        self.EntryCsearchname.configure(textvariable=coffeemanagementsystem_support.scustomer)

        self.Comboscategory = ttk.Combobox(self.ManageCustomernb_t1)
        self.Comboscategory.place(relx=0.464, rely=0.018, relheight=0.057
                , relwidth=0.161)
        self.value_list = ['Name','PhoneNo','Email',]
        self.Comboscategory.configure(values=self.value_list)
        self.Comboscategory.configure(font="-family {Segoe UI Semibold} -size 10 -weight bold")
        self.Comboscategory.configure(state='readonly')
        self.Comboscategory.configure(textvariable=coffeemanagementsystem_support.scombobox)
        self.Comboscategory.configure(takefocus="")

        self.LabelCsdata = tk.Label(self.ManageCustomernb_t1)
        self.LabelCsdata.place(relx=0.109, rely=0.009, height=31, width=134)
        self.LabelCsdata.configure(activebackground="#f9f9f9")
        self.LabelCsdata.configure(activeforeground="black")
        self.LabelCsdata.configure(background="white")
        self.LabelCsdata.configure(disabledforeground="#a3a3a3")
        self.LabelCsdata.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelCsdata.configure(foreground="#000000")
        self.LabelCsdata.configure(highlightbackground="#d9d9d9")
        self.LabelCsdata.configure(highlightcolor="black")
        self.LabelCsdata.configure(text='''Enter data''')

        self.ButtonCsviewd = tk.Button(self.ManageCustomernb_t1)
        self.ButtonCsviewd.place(relx=0.4, rely=0.697, height=74, width=187)
        self.ButtonCsviewd.configure(activebackground="#ececec")
        self.ButtonCsviewd.configure(activeforeground="#000000")
        self.ButtonCsviewd.configure(background="#f7eafd")
        self.ButtonCsviewd.configure(command=coffeemanagementsystem_support.viewcusdetails)
        self.ButtonCsviewd.configure(disabledforeground="#a3a3a3")
        self.ButtonCsviewd.configure(font="-family {Yu Gothic Medium} -size 13 -weight bold")
        self.ButtonCsviewd.configure(foreground="black")
        self.ButtonCsviewd.configure(highlightbackground="#d9d9d9")
        self.ButtonCsviewd.configure(highlightcolor="black")
        self.ButtonCsviewd.configure(pady="0")
        self.ButtonCsviewd.configure(relief="flat")
        self.ButtonCsviewd.configure(text='''View Details''')

        self.LabelCoffee = tk.Label(self.TNotebook1_t2_coffee)
        self.LabelCoffee.place(relx=0.0, rely=0.0, height=90, width=975)
        self.LabelCoffee.configure(activebackground="#f9f9f9")
        self.LabelCoffee.configure(activeforeground="black")
        self.LabelCoffee.configure(background="#000080")
        self.LabelCoffee.configure(disabledforeground="#a3a3a3")
        self.LabelCoffee.configure(font="-family {Arial} -size 18 -weight bold -underline 1")
        self.LabelCoffee.configure(foreground="white")
        self.LabelCoffee.configure(highlightbackground="#d9d9d9")
        self.LabelCoffee.configure(highlightcolor="black")
        self.LabelCoffee.configure(text='''Manage Coffee Ingredients''')

        self.Frame2 = tk.Frame(self.TNotebook1_t2_coffee)
        self.Frame2.place(relx=0.862, rely=0.137, relheight=0.875
                , relwidth=0.147)
        self.Frame2.configure(relief='groove')
        self.Frame2.configure(borderwidth="2")
        self.Frame2.configure(relief="groove")
        self.Frame2.configure(background="black")
        self.Frame2.configure(highlightbackground="#d9d9d9")
        self.Frame2.configure(highlightcolor="black")

        self.Buttonidel = tk.Button(self.Frame2)
        self.Buttonidel.place(relx=0.151, rely=0.245, height=54, width=97)
        self.Buttonidel.configure(activebackground="#ececec")
        self.Buttonidel.configure(activeforeground="#000000")
        self.Buttonidel.configure(background="black")
        self.Buttonidel.configure(command=coffeemanagementsystem_support.delingre)
        self.Buttonidel.configure(disabledforeground="#a3a3a3")
        self.Buttonidel.configure(font="-family {Yu Gothic UI Semibold} -size 12 -weight bold")
        self.Buttonidel.configure(foreground="yellow")
        self.Buttonidel.configure(highlightbackground="#d9d9d9")
        self.Buttonidel.configure(highlightcolor="black")
        self.Buttonidel.configure(pady="0")
        self.Buttonidel.configure(relief="flat")
        self.Buttonidel.configure(text='''Delete''')

        self.Buttoniupdate = tk.Button(self.Frame2)
        self.Buttoniupdate.place(relx=0.144, rely=0.581, height=54, width=97)
        self.Buttoniupdate.configure(activebackground="#ececec")
        self.Buttoniupdate.configure(activeforeground="#000000")
        self.Buttoniupdate.configure(background="black")
        self.Buttoniupdate.configure(command=coffeemanagementsystem_support.updateingre)
        self.Buttoniupdate.configure(disabledforeground="#a3a3a3")
        self.Buttoniupdate.configure(font="-family {Yu Gothic UI Semibold} -size 12 -weight bold")
        self.Buttoniupdate.configure(foreground="yellow")
        self.Buttoniupdate.configure(highlightbackground="#d9d9d9")
        self.Buttoniupdate.configure(highlightcolor="black")
        self.Buttoniupdate.configure(pady="0")
        self.Buttoniupdate.configure(relief="flat")
        self.Buttoniupdate.configure(text='''Update''')

        self.Buttoniview = tk.Button(self.Frame2)
        self.Buttoniview.place(relx=0.144, rely=0.739, height=54, width=97)
        self.Buttoniview.configure(activebackground="#ececec")
        self.Buttoniview.configure(activeforeground="#000000")
        self.Buttoniview.configure(background="black")
        self.Buttoniview.configure(command=coffeemanagementsystem_support.viewingre)
        self.Buttoniview.configure(disabledforeground="#a3a3a3")
        self.Buttoniview.configure(font="-family {Yu Gothic UI Semibold} -size 12 -weight bold")
        self.Buttoniview.configure(foreground="yellow")
        self.Buttoniview.configure(highlightbackground="#d9d9d9")
        self.Buttoniview.configure(highlightcolor="black")
        self.Buttoniview.configure(pady="0")
        self.Buttoniview.configure(relief="flat")
        self.Buttoniview.configure(text='''View''')

        self.Buttoniadd = tk.Button(self.TNotebook1_t2_coffee)
        self.Buttoniadd.place(relx=0.882, rely=0.183, height=54, width=97)
        self.Buttoniadd.configure(activebackground="#ececec")
        self.Buttoniadd.configure(activeforeground="#000000")
        self.Buttoniadd.configure(background="black")
        self.Buttoniadd.configure(command=coffeemanagementsystem_support.addingre)
        self.Buttoniadd.configure(disabledforeground="#a3a3a3")
        self.Buttoniadd.configure(font="-family {Yu Gothic UI Semibold} -size 12 -weight bold")
        self.Buttoniadd.configure(foreground="yellow")
        self.Buttoniadd.configure(highlightbackground="#d9d9d9")
        self.Buttoniadd.configure(highlightcolor="black")
        self.Buttoniadd.configure(pady="0")
        self.Buttoniadd.configure(relief="flat")
        self.Buttoniadd.configure(text='''Add''')

        self.Scrolledtreeviewingre = ScrolledTreeView(self.TNotebook1_t2_coffee)
        self.Scrolledtreeviewingre.place(relx=0.011, rely=0.153, relheight=0.481
                , relwidth=0.686)
        self.Scrolledtreeviewingre.configure(columns="Col1 Col2 Col3")
        # build_treeview_support starting.
        self.Scrolledtreeviewingre.heading("#0",text="Tree")
        self.Scrolledtreeviewingre.heading("#0",anchor="center")
        self.Scrolledtreeviewingre.column("#0",width="0")
        self.Scrolledtreeviewingre.column("#0",minwidth="0")
        self.Scrolledtreeviewingre.column("#0",stretch="0")
        self.Scrolledtreeviewingre.column("#0",anchor="w")
        self.Scrolledtreeviewingre.heading("Col1",text="Name of item")
        self.Scrolledtreeviewingre.heading("Col1",anchor="center")
        self.Scrolledtreeviewingre.column("Col1",width="177")
        self.Scrolledtreeviewingre.column("Col1",minwidth="20")
        self.Scrolledtreeviewingre.column("Col1",stretch="1")
        self.Scrolledtreeviewingre.column("Col1",anchor="w")
        self.Scrolledtreeviewingre.heading("Col2",text="Avaliable Stock")
        self.Scrolledtreeviewingre.heading("Col2",anchor="center")
        self.Scrolledtreeviewingre.column("Col2",width="227")
        self.Scrolledtreeviewingre.column("Col2",minwidth="20")
        self.Scrolledtreeviewingre.column("Col2",stretch="1")
        self.Scrolledtreeviewingre.column("Col2",anchor="w")
        self.Scrolledtreeviewingre.heading("Col3",text="Unit of measurement ")
        self.Scrolledtreeviewingre.heading("Col3",anchor="center")
        self.Scrolledtreeviewingre.column("Col3",width="226")
        self.Scrolledtreeviewingre.column("Col3",minwidth="20")
        self.Scrolledtreeviewingre.column("Col3",stretch="1")
        self.Scrolledtreeviewingre.column("Col3",anchor="w")

        self.LabelIname = tk.Label(self.TNotebook1_t2_coffee)
        self.LabelIname.place(relx=0.011, rely=0.639, height=51, width=118)
        self.LabelIname.configure(activebackground="#f9f9f9")
        self.LabelIname.configure(activeforeground="black")
        self.LabelIname.configure(background="white")
        self.LabelIname.configure(disabledforeground="#a3a3a3")
        self.LabelIname.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelIname.configure(foreground="#000000")
        self.LabelIname.configure(highlightbackground="#d9d9d9")
        self.LabelIname.configure(highlightcolor="black")
        self.LabelIname.configure(text='''Name''')

        self.LabelIstock = tk.Label(self.TNotebook1_t2_coffee)
        self.LabelIstock.place(relx=0.011, rely=0.716, height=50, width=139)
        self.LabelIstock.configure(activebackground="#f9f9f9")
        self.LabelIstock.configure(activeforeground="black")
        self.LabelIstock.configure(background="white")
        self.LabelIstock.configure(disabledforeground="#a3a3a3")
        self.LabelIstock.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelIstock.configure(foreground="#000000")
        self.LabelIstock.configure(highlightbackground="#d9d9d9")
        self.LabelIstock.configure(highlightcolor="black")
        self.LabelIstock.configure(text='''Avaliable stock''')

        self.LabelIunit = tk.Label(self.TNotebook1_t2_coffee)
        self.LabelIunit.place(relx=0.011, rely=0.797, height=51, width=139)
        self.LabelIunit.configure(activebackground="#f9f9f9")
        self.LabelIunit.configure(activeforeground="black")
        self.LabelIunit.configure(background="white")
        self.LabelIunit.configure(disabledforeground="#a3a3a3")
        self.LabelIunit.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelIunit.configure(foreground="#000000")
        self.LabelIunit.configure(highlightbackground="#d9d9d9")
        self.LabelIunit.configure(highlightcolor="black")
        self.LabelIunit.configure(text='''Unit''')

        self.Entryiname = tk.Entry(self.TNotebook1_t2_coffee)
        self.Entryiname.place(relx=0.163, rely=0.67, height=20, relwidth=0.226)
        self.Entryiname.configure(background="#80ffff")
        self.Entryiname.configure(disabledforeground="#a3a3a3")
        self.Entryiname.configure(font="-family {Arial} -size 14")
        self.Entryiname.configure(foreground="#000000")
        self.Entryiname.configure(highlightbackground="#d9d9d9")
        self.Entryiname.configure(highlightcolor="black")
        self.Entryiname.configure(insertbackground="black")
        self.Entryiname.configure(selectbackground="blue")
        self.Entryiname.configure(selectforeground="white")
        self.Entryiname.configure(textvariable=coffeemanagementsystem_support.iname)

        self.Entryistock = tk.Entry(self.TNotebook1_t2_coffee)
        self.Entryistock.place(relx=0.163, rely=0.746, height=20, relwidth=0.047)

        self.Entryistock.configure(background="#80ffff")
        self.Entryistock.configure(disabledforeground="#a3a3a3")
        self.Entryistock.configure(font="-family {Arial} -size 14")
        self.Entryistock.configure(foreground="#000000")
        self.Entryistock.configure(highlightbackground="#d9d9d9")
        self.Entryistock.configure(highlightcolor="black")
        self.Entryistock.configure(insertbackground="black")
        self.Entryistock.configure(selectbackground="blue")
        self.Entryistock.configure(selectforeground="white")
        self.Entryistock.configure(textvariable=coffeemanagementsystem_support.istock)

        self.TComboboxigre = ttk.Combobox(self.TNotebook1_t2_coffee)
        self.TComboboxigre.place(relx=0.159, rely=0.807, relheight=0.049
                , relwidth=0.156)
        self.value_list = ['ml','litre','gallon','grams','kg',]
        self.TComboboxigre.configure(values=self.value_list)
        self.TComboboxigre.configure(font="-family {Segoe UI Emoji} -size 11 -weight bold")
        self.TComboboxigre.configure(state='readonly')
        self.TComboboxigre.configure(textvariable=coffeemanagementsystem_support.icombobox)
        self.TComboboxigre.configure(takefocus="")

        self.Buttonidelall = tk.Button(self.TNotebook1_t2_coffee)
        self.Buttonidelall.place(relx=0.878, rely=0.492, height=54, width=97)
        self.Buttonidelall.configure(activebackground="#ececec")
        self.Buttonidelall.configure(activeforeground="#000000")
        self.Buttonidelall.configure(background="black")
        self.Buttonidelall.configure(command=coffeemanagementsystem_support.delallingre)
        self.Buttonidelall.configure(disabledforeground="#a3a3a3")
        self.Buttonidelall.configure(font="-family {Yu Gothic UI Semibold} -size 12 -weight bold")
        self.Buttonidelall.configure(foreground="yellow")
        self.Buttonidelall.configure(highlightbackground="#d9d9d9")
        self.Buttonidelall.configure(highlightcolor="black")
        self.Buttonidelall.configure(pady="0")
        self.Buttonidelall.configure(relief="flat")
        self.Buttonidelall.configure(text='''Delete All''')

        self.MenuImg = tk.Label(self.TNotebook1_placeorder)
        self.MenuImg.place(relx=-0.021, rely=0.096, height=542, width=985)
        self.MenuImg.configure(activebackground="#f9f9f9")
        self.MenuImg.configure(activeforeground="black")
        self.MenuImg.configure(background="#d9d9d9")
        self.MenuImg.configure(disabledforeground="#a3a3a3")
        self.MenuImg.configure(foreground="#000000")
        self.MenuImg.configure(highlightbackground="#d9d9d9")
        self.MenuImg.configure(highlightcolor="black")
        photo_location = os.path.join(prog_location,"menucoffee.PNG")
        global _img2
        _img2 = ImageTk.PhotoImage(file=photo_location)
        self.MenuImg.configure(image=_img2)
        self.MenuImg.configure(text='''Label''')

        self.Labelorder = tk.Label(self.TNotebook1_placeorder)
        self.Labelorder.place(relx=-0.01, rely=0.0, height=90, width=961)
        self.Labelorder.configure(activebackground="#f9f9f9")
        self.Labelorder.configure(activeforeground="black")
        self.Labelorder.configure(background="#000080")
        self.Labelorder.configure(disabledforeground="#a3a3a3")
        self.Labelorder.configure(font="-family {Segoe UI Emoji} -size 18 -weight bold")
        self.Labelorder.configure(foreground="white")
        self.Labelorder.configure(highlightbackground="#d9d9d9")
        self.Labelorder.configure(highlightcolor="black")
        self.Labelorder.configure(text='''Place Your Order''')

        self.EntryLatte = tk.Entry(self.TNotebook1_placeorder)
        self.EntryLatte.place(relx=0.063, rely=0.499, height=20, relwidth=0.057)
        self.EntryLatte.configure(background="#00ffff")
        self.EntryLatte.configure(disabledforeground="#a3a3a3")
        self.EntryLatte.configure(font="-family {Segoe UI Symbol} -size 14 -weight bold")
        self.EntryLatte.configure(foreground="#000000")
        self.EntryLatte.configure(highlightbackground="#d9d9d9")
        self.EntryLatte.configure(highlightcolor="black")
        self.EntryLatte.configure(insertbackground="black")
        self.EntryLatte.configure(selectbackground="blue")
        self.EntryLatte.configure(selectforeground="white")
        self.EntryLatte.configure(state='readonly')
        self.EntryLatte.configure(textvariable=coffeemanagementsystem_support.lattevar)

        self.EntryCappuccino = tk.Entry(self.TNotebook1_placeorder)
        self.EntryCappuccino.place(relx=0.333, rely=0.498, height=20
                , relwidth=0.057)
        self.EntryCappuccino.configure(background="#00ffff")
        self.EntryCappuccino.configure(disabledforeground="#a3a3a3")
        self.EntryCappuccino.configure(font="-family {Segoe UI Symbol} -size 14 -weight bold")
        self.EntryCappuccino.configure(foreground="#000000")
        self.EntryCappuccino.configure(highlightbackground="#d9d9d9")
        self.EntryCappuccino.configure(highlightcolor="black")
        self.EntryCappuccino.configure(insertbackground="black")
        self.EntryCappuccino.configure(selectbackground="blue")
        self.EntryCappuccino.configure(selectforeground="white")
        self.EntryCappuccino.configure(state='readonly')
        self.EntryCappuccino.configure(textvariable=coffeemanagementsystem_support.cappvar)

        self.Entryvanillacapp = tk.Entry(self.TNotebook1_placeorder)
        self.Entryvanillacapp.place(relx=0.601, rely=0.498, height=20
                , relwidth=0.057)
        self.Entryvanillacapp.configure(background="#00ffff")
        self.Entryvanillacapp.configure(disabledforeground="#a3a3a3")
        self.Entryvanillacapp.configure(font="-family {Segoe UI Symbol} -size 14 -weight bold")
        self.Entryvanillacapp.configure(foreground="#000000")
        self.Entryvanillacapp.configure(highlightbackground="#d9d9d9")
        self.Entryvanillacapp.configure(highlightcolor="black")
        self.Entryvanillacapp.configure(insertbackground="black")
        self.Entryvanillacapp.configure(selectbackground="blue")
        self.Entryvanillacapp.configure(selectforeground="white")
        self.Entryvanillacapp.configure(state='readonly')
        self.Entryvanillacapp.configure(textvariable=coffeemanagementsystem_support.vanillavar)

        self.Entrylovesp = tk.Entry(self.TNotebook1_placeorder)
        self.Entrylovesp.place(relx=0.849, rely=0.498, height=20, relwidth=0.057)

        self.Entrylovesp.configure(background="#00ffff")
        self.Entrylovesp.configure(disabledforeground="#a3a3a3")
        self.Entrylovesp.configure(font="-family {Segoe UI Symbol} -size 14 -weight bold")
        self.Entrylovesp.configure(foreground="#000000")
        self.Entrylovesp.configure(highlightbackground="#d9d9d9")
        self.Entrylovesp.configure(highlightcolor="black")
        self.Entrylovesp.configure(insertbackground="black")
        self.Entrylovesp.configure(selectbackground="blue")
        self.Entrylovesp.configure(selectforeground="white")
        self.Entrylovesp.configure(state='readonly')
        self.Entrylovesp.configure(textvariable=coffeemanagementsystem_support.lovespvar)

        self.EntryMocha = tk.Entry(self.TNotebook1_placeorder)
        self.EntryMocha.place(relx=0.063, rely=0.884, height=20, relwidth=0.057)
        self.EntryMocha.configure(background="#00ffff")
        self.EntryMocha.configure(disabledforeground="#a3a3a3")
        self.EntryMocha.configure(font="-family {Segoe UI Symbol} -size 14 -weight bold")
        self.EntryMocha.configure(foreground="#000000")
        self.EntryMocha.configure(highlightbackground="#d9d9d9")
        self.EntryMocha.configure(highlightcolor="black")
        self.EntryMocha.configure(insertbackground="black")
        self.EntryMocha.configure(selectbackground="blue")
        self.EntryMocha.configure(selectforeground="white")
        self.EntryMocha.configure(state='readonly')
        self.EntryMocha.configure(textvariable=coffeemanagementsystem_support.mochavar)

        self.EntryEthio = tk.Entry(self.TNotebook1_placeorder)
        self.EntryEthio.place(relx=0.339, rely=0.886, height=20, relwidth=0.057)
        self.EntryEthio.configure(background="#00ffff")
        self.EntryEthio.configure(disabledforeground="#a3a3a3")
        self.EntryEthio.configure(font="-family {Segoe UI Symbol} -size 14 -weight bold")
        self.EntryEthio.configure(foreground="#000000")
        self.EntryEthio.configure(highlightbackground="#d9d9d9")
        self.EntryEthio.configure(highlightcolor="black")
        self.EntryEthio.configure(insertbackground="black")
        self.EntryEthio.configure(selectbackground="blue")
        self.EntryEthio.configure(selectforeground="white")
        self.EntryEthio.configure(state='readonly')
        self.EntryEthio.configure(textvariable=coffeemanagementsystem_support.ethiovar)

        self.EntryIrish = tk.Entry(self.TNotebook1_placeorder)
        self.EntryIrish.place(relx=0.603, rely=0.886, height=20, relwidth=0.057)
        self.EntryIrish.configure(background="#00ffff")
        self.EntryIrish.configure(disabledforeground="#a3a3a3")
        self.EntryIrish.configure(font="-family {Segoe UI Symbol} -size 14 -weight bold")
        self.EntryIrish.configure(foreground="#000000")
        self.EntryIrish.configure(highlightbackground="#d9d9d9")
        self.EntryIrish.configure(highlightcolor="black")
        self.EntryIrish.configure(insertbackground="black")
        self.EntryIrish.configure(selectbackground="blue")
        self.EntryIrish.configure(selectforeground="white")
        self.EntryIrish.configure(state='readonly')
        self.EntryIrish.configure(textvariable=coffeemanagementsystem_support.irishvar)

        self.EntryBlack = tk.Entry(self.TNotebook1_placeorder)
        self.EntryBlack.place(relx=0.847, rely=0.886, height=20, relwidth=0.057)
        self.EntryBlack.configure(background="#00ffff")
        self.EntryBlack.configure(disabledforeground="#a3a3a3")
        self.EntryBlack.configure(font="-family {Segoe UI Symbol} -size 14 -weight bold")
        self.EntryBlack.configure(foreground="#000000")
        self.EntryBlack.configure(highlightbackground="#d9d9d9")
        self.EntryBlack.configure(highlightcolor="black")
        self.EntryBlack.configure(insertbackground="black")
        self.EntryBlack.configure(selectbackground="blue")
        self.EntryBlack.configure(selectforeground="white")
        self.EntryBlack.configure(state='readonly')
        self.EntryBlack.configure(textvariable=coffeemanagementsystem_support.blackvar)

        self.Buttonorderplace = tk.Button(self.TNotebook1_placeorder)
        self.Buttonorderplace.place(relx=0.0, rely=0.914, height=44, width=967)
        self.Buttonorderplace.configure(activebackground="#ececec")
        self.Buttonorderplace.configure(activeforeground="#000000")
        self.Buttonorderplace.configure(background="black")
        self.Buttonorderplace.configure(command=coffeemanagementsystem_support.orderplace)
        self.Buttonorderplace.configure(disabledforeground="#a3a3a3")
        self.Buttonorderplace.configure(font="-family {Segoe UI Emoji} -size 18 -weight bold")
        self.Buttonorderplace.configure(foreground="RED")
        self.Buttonorderplace.configure(highlightbackground="#d9d9d9")
        self.Buttonorderplace.configure(highlightcolor="black")
        self.Buttonorderplace.configure(pady="0")
        self.Buttonorderplace.configure(text='''Click Here to Order''')

        self.inclatte = tk.Button(self.TNotebook1_placeorder)
        self.inclatte.place(relx=0.146, rely=0.499, height=24, width=27)
        self.inclatte.configure(activebackground="#ececec")
        self.inclatte.configure(activeforeground="#000000")
        self.inclatte.configure(background="black")
        self.inclatte.configure(command=lambda t="latte":coffeemanagementsystem_support.latteinc(t))
        self.inclatte.configure(disabledforeground="#a3a3a3")
        self.inclatte.configure(font="-family {Yu Gothic UI Semibold} -size 16 -weight bold")
        self.inclatte.configure(foreground="white")
        self.inclatte.configure(highlightbackground="#d9d9d9")
        self.inclatte.configure(highlightcolor="black")
        self.inclatte.configure(pady="0")
        self.inclatte.configure(relief="flat")
        self.inclatte.configure(text='''+''')

        self.inccapp = tk.Button(self.TNotebook1_placeorder)
        self.inccapp.place(relx=0.408, rely=0.492, height=24, width=27)
        self.inccapp.configure(activebackground="#ececec")
        self.inccapp.configure(activeforeground="#000000")
        self.inccapp.configure(background="black")
        self.inccapp.configure(command=lambda t="capp":coffeemanagementsystem_support.latteinc(t))
        self.inccapp.configure(disabledforeground="#a3a3a3")
        self.inccapp.configure(font="-family {Yu Gothic UI Semibold} -size 16 -weight bold")
        self.inccapp.configure(foreground="white")
        self.inccapp.configure(highlightbackground="#d9d9d9")
        self.inccapp.configure(highlightcolor="black")
        self.inccapp.configure(pady="0")
        self.inccapp.configure(relief="flat")
        self.inccapp.configure(text='''+''')

        self.incvancapp = tk.Button(self.TNotebook1_placeorder)
        self.incvancapp.place(relx=0.681, rely=0.492, height=24, width=27)
        self.incvancapp.configure(activebackground="#ececec")
        self.incvancapp.configure(activeforeground="#000000")
        self.incvancapp.configure(background="black")
        self.incvancapp.configure(command=lambda t="vancapp":coffeemanagementsystem_support.latteinc(t))
        self.incvancapp.configure(disabledforeground="#a3a3a3")
        self.incvancapp.configure(font="-family {Yu Gothic UI Semibold} -size 16 -weight bold")
        self.incvancapp.configure(foreground="white")
        self.incvancapp.configure(highlightbackground="#d9d9d9")
        self.incvancapp.configure(highlightcolor="black")
        self.incvancapp.configure(pady="0")
        self.incvancapp.configure(relief="flat")
        self.incvancapp.configure(text='''+''')

        self.inclovesp = tk.Button(self.TNotebook1_placeorder)
        self.inclovesp.place(relx=0.921, rely=0.492, height=24, width=37)
        self.inclovesp.configure(activebackground="#ececec")
        self.inclovesp.configure(activeforeground="#000000")
        self.inclovesp.configure(background="black")
        self.inclovesp.configure(command=lambda t="lovesp":coffeemanagementsystem_support.latteinc(t))
        self.inclovesp.configure(disabledforeground="#a3a3a3")
        self.inclovesp.configure(font="-family {Yu Gothic UI Semibold} -size 16 -weight bold")
        self.inclovesp.configure(foreground="white")
        self.inclovesp.configure(highlightbackground="#d9d9d9")
        self.inclovesp.configure(highlightcolor="black")
        self.inclovesp.configure(pady="0")
        self.inclovesp.configure(relief="flat")
        self.inclovesp.configure(text='''+''')

        self.incmocha = tk.Button(self.TNotebook1_placeorder)
        self.incmocha.place(relx=0.147, rely=0.877, height=24, width=27)
        self.incmocha.configure(activebackground="#ececec")
        self.incmocha.configure(activeforeground="#000000")
        self.incmocha.configure(background="black")
        self.incmocha.configure(command=lambda t="mocha":coffeemanagementsystem_support.latteinc(t))
        self.incmocha.configure(disabledforeground="#a3a3a3")
        self.incmocha.configure(font="-family {Yu Gothic UI Semibold} -size 16 -weight bold")
        self.incmocha.configure(foreground="white")
        self.incmocha.configure(highlightbackground="#d9d9d9")
        self.incmocha.configure(highlightcolor="black")
        self.incmocha.configure(pady="0")
        self.incmocha.configure(relief="flat")
        self.incmocha.configure(text='''+''')

        self.incetho = tk.Button(self.TNotebook1_placeorder)
        self.incetho.place(relx=0.408, rely=0.877, height=24, width=27)
        self.incetho.configure(activebackground="#ececec")
        self.incetho.configure(activeforeground="#000000")
        self.incetho.configure(background="black")
        self.incetho.configure(command=lambda t="etho":coffeemanagementsystem_support.latteinc(t))
        self.incetho.configure(disabledforeground="#a3a3a3")
        self.incetho.configure(font="-family {Yu Gothic UI Semibold} -size 16 -weight bold")
        self.incetho.configure(foreground="white")
        self.incetho.configure(highlightbackground="#d9d9d9")
        self.incetho.configure(highlightcolor="black")
        self.incetho.configure(pady="0")
        self.incetho.configure(relief="flat")
        self.incetho.configure(text='''+''')

        self.incirish = tk.Button(self.TNotebook1_placeorder)
        self.incirish.place(relx=0.681, rely=0.877, height=24, width=27)
        self.incirish.configure(activebackground="#ececec")
        self.incirish.configure(activeforeground="#000000")
        self.incirish.configure(background="black")
        self.incirish.configure(command=lambda t="irish":coffeemanagementsystem_support.latteinc(t))
        self.incirish.configure(disabledforeground="#a3a3a3")
        self.incirish.configure(font="-family {Yu Gothic UI Semibold} -size 16 -weight bold")
        self.incirish.configure(foreground="white")
        self.incirish.configure(highlightbackground="#d9d9d9")
        self.incirish.configure(highlightcolor="black")
        self.incirish.configure(pady="0")
        self.incirish.configure(relief="flat")
        self.incirish.configure(text='''+''')

        self.incblack = tk.Button(self.TNotebook1_placeorder)
        self.incblack.place(relx=0.921, rely=0.877, height=24, width=37)
        self.incblack.configure(activebackground="#ececec")
        self.incblack.configure(activeforeground="#000000")
        self.incblack.configure(background="black")
        self.incblack.configure(command=lambda t="black":coffeemanagementsystem_support.latteinc(t))
        self.incblack.configure(disabledforeground="#a3a3a3")
        self.incblack.configure(font="-family {Yu Gothic UI Semibold} -size 16 -weight bold")
        self.incblack.configure(foreground="white")
        self.incblack.configure(highlightbackground="#d9d9d9")
        self.incblack.configure(highlightcolor="black")
        self.incblack.configure(pady="0")
        self.incblack.configure(relief="flat")
        self.incblack.configure(text='''+''')

        self.declatte = tk.Button(self.TNotebook1_placeorder)
        self.declatte.place(relx=0.022, rely=0.498, height=24, width=27)
        self.declatte.configure(activebackground="#ececec")
        self.declatte.configure(activeforeground="#000000")
        self.declatte.configure(background="black")
        self.declatte.configure(command=lambda t="dlatte":coffeemanagementsystem_support.latteinc(t))
        self.declatte.configure(disabledforeground="#a3a3a3")
        self.declatte.configure(font="-family {Yu Gothic UI Semibold} -size 16 -weight bold")
        self.declatte.configure(foreground="white")
        self.declatte.configure(highlightbackground="#d9d9d9")
        self.declatte.configure(highlightcolor="black")
        self.declatte.configure(pady="0")
        self.declatte.configure(relief="flat")
        self.declatte.configure(text='''-''')

        self.decmocha = tk.Button(self.TNotebook1_placeorder)
        self.decmocha.place(relx=0.022, rely=0.877, height=24, width=27)
        self.decmocha.configure(activebackground="#ececec")
        self.decmocha.configure(activeforeground="#000000")
        self.decmocha.configure(background="black")
        self.decmocha.configure(command=lambda t="dmocha":coffeemanagementsystem_support.latteinc(t))
        self.decmocha.configure(disabledforeground="#a3a3a3")
        self.decmocha.configure(font="-family {Yu Gothic UI Semibold} -size 16 -weight bold")
        self.decmocha.configure(foreground="white")
        self.decmocha.configure(highlightbackground="#d9d9d9")
        self.decmocha.configure(highlightcolor="black")
        self.decmocha.configure(pady="0")
        self.decmocha.configure(relief="flat")
        self.decmocha.configure(text='''-''')

        self.decethio = tk.Button(self.TNotebook1_placeorder)
        self.decethio.place(relx=0.29, rely=0.877, height=24, width=27)
        self.decethio.configure(activebackground="#ececec")
        self.decethio.configure(activeforeground="#000000")
        self.decethio.configure(background="black")
        self.decethio.configure(command=lambda t="detho":coffeemanagementsystem_support.latteinc(t))
        self.decethio.configure(disabledforeground="#a3a3a3")
        self.decethio.configure(font="-family {Yu Gothic UI Semibold} -size 16 -weight bold")
        self.decethio.configure(foreground="white")
        self.decethio.configure(highlightbackground="#d9d9d9")
        self.decethio.configure(highlightcolor="black")
        self.decethio.configure(pady="0")
        self.decethio.configure(relief="flat")
        self.decethio.configure(text='''-''')

        self.deccapp = tk.Button(self.TNotebook1_placeorder)
        self.deccapp.place(relx=0.293, rely=0.492, height=24, width=27)
        self.deccapp.configure(activebackground="#ececec")
        self.deccapp.configure(activeforeground="#000000")
        self.deccapp.configure(background="black")
        self.deccapp.configure(command=lambda t="dcapp":coffeemanagementsystem_support.latteinc(t))
        self.deccapp.configure(disabledforeground="#a3a3a3")
        self.deccapp.configure(font="-family {Yu Gothic UI Semibold} -size 16 -weight bold")
        self.deccapp.configure(foreground="white")
        self.deccapp.configure(highlightbackground="#d9d9d9")
        self.deccapp.configure(highlightcolor="black")
        self.deccapp.configure(pady="0")
        self.deccapp.configure(relief="flat")
        self.deccapp.configure(text='''-''')

        self.decirish = tk.Button(self.TNotebook1_placeorder)
        self.decirish.place(relx=0.56, rely=0.877, height=24, width=27)
        self.decirish.configure(activebackground="#ececec")
        self.decirish.configure(activeforeground="#000000")
        self.decirish.configure(background="black")
        self.decirish.configure(command=lambda t="dirish":coffeemanagementsystem_support.latteinc(t))
        self.decirish.configure(disabledforeground="#a3a3a3")
        self.decirish.configure(font="-family {Yu Gothic UI Semibold} -size 16 -weight bold")
        self.decirish.configure(foreground="white")
        self.decirish.configure(highlightbackground="#d9d9d9")
        self.decirish.configure(highlightcolor="black")
        self.decirish.configure(pady="0")
        self.decirish.configure(relief="flat")
        self.decirish.configure(text='''-''')

        self.decvanilla = tk.Button(self.TNotebook1_placeorder)
        self.decvanilla.place(relx=0.564, rely=0.492, height=24, width=27)
        self.decvanilla.configure(activebackground="#ececec")
        self.decvanilla.configure(activeforeground="#000000")
        self.decvanilla.configure(background="black")
        self.decvanilla.configure(command=lambda t="dvancapp":coffeemanagementsystem_support.latteinc(t))
        self.decvanilla.configure(disabledforeground="#a3a3a3")
        self.decvanilla.configure(font="-family {Yu Gothic UI Semibold} -size 16 -weight bold")
        self.decvanilla.configure(foreground="white")
        self.decvanilla.configure(highlightbackground="#d9d9d9")
        self.decvanilla.configure(highlightcolor="black")
        self.decvanilla.configure(pady="0")
        self.decvanilla.configure(relief="flat")
        self.decvanilla.configure(text='''-''')

        self.decblack = tk.Button(self.TNotebook1_placeorder)
        self.decblack.place(relx=0.805, rely=0.877, height=24, width=27)
        self.decblack.configure(activebackground="#ececec")
        self.decblack.configure(activeforeground="#000000")
        self.decblack.configure(background="black")
        self.decblack.configure(command=lambda t="dblack":coffeemanagementsystem_support.latteinc(t))
        self.decblack.configure(disabledforeground="#a3a3a3")
        self.decblack.configure(font="-family {Yu Gothic UI Semibold} -size 16 -weight bold")
        self.decblack.configure(foreground="white")
        self.decblack.configure(highlightbackground="#d9d9d9")
        self.decblack.configure(highlightcolor="black")
        self.decblack.configure(pady="0")
        self.decblack.configure(relief="flat")
        self.decblack.configure(text='''-''')

        self.declove = tk.Button(self.TNotebook1_placeorder)
        self.declove.place(relx=0.804, rely=0.495, height=24, width=27)
        self.declove.configure(activebackground="#ececec")
        self.declove.configure(activeforeground="#000000")
        self.declove.configure(background="black")
        self.declove.configure(command=lambda t="dlovesp":coffeemanagementsystem_support.latteinc(t))
        self.declove.configure(disabledforeground="#a3a3a3")
        self.declove.configure(font="-family {Yu Gothic UI Semibold} -size 16 -weight bold")
        self.declove.configure(foreground="white")
        self.declove.configure(highlightbackground="#d9d9d9")
        self.declove.configure(highlightcolor="black")
        self.declove.configure(pady="0")
        self.declove.configure(relief="flat")
        self.declove.configure(text='''-''')

        self.pricelatte = tk.Label(self.TNotebook1_placeorder)
        self.pricelatte.place(relx=0.063, rely=0.139, height=31, width=54)
        self.pricelatte.configure(activebackground="#f9f9f9")
        self.pricelatte.configure(activeforeground="black")
        self.pricelatte.configure(background="darkred")
        self.pricelatte.configure(disabledforeground="#a3a3a3")
        self.pricelatte.configure(font="-family {Bahnschrift SemiBold SemiConden} -size 13 -weight bold")
        self.pricelatte.configure(foreground="yellow")
        self.pricelatte.configure(highlightbackground="#d9d9d9")
        self.pricelatte.configure(highlightcolor="black")
        self.pricelatte.configure(text='''0''')
        self.pricelatte.configure(textvariable=coffeemanagementsystem_support.costlatte)

        self.pricecapp = tk.Label(self.TNotebook1_placeorder)
        self.pricecapp.place(relx=0.349, rely=0.139, height=31, width=54)
        self.pricecapp.configure(activebackground="#f9f9f9")
        self.pricecapp.configure(activeforeground="black")
        self.pricecapp.configure(background="darkred")
        self.pricecapp.configure(disabledforeground="#a3a3a3")
        self.pricecapp.configure(font="-family {Bahnschrift SemiBold SemiConden} -size 13 -weight bold")
        self.pricecapp.configure(foreground="yellow")
        self.pricecapp.configure(highlightbackground="#d9d9d9")
        self.pricecapp.configure(highlightcolor="black")
        self.pricecapp.configure(text='''0''')
        self.pricecapp.configure(textvariable=coffeemanagementsystem_support.costcapp)

        self.pricevcapp = tk.Label(self.TNotebook1_placeorder)
        self.pricevcapp.place(relx=0.613, rely=0.139, height=31, width=54)
        self.pricevcapp.configure(activebackground="#f9f9f9")
        self.pricevcapp.configure(activeforeground="black")
        self.pricevcapp.configure(background="darkred")
        self.pricevcapp.configure(disabledforeground="#a3a3a3")
        self.pricevcapp.configure(font="-family {Bahnschrift SemiBold SemiConden} -size 13 -weight bold")
        self.pricevcapp.configure(foreground="yellow")
        self.pricevcapp.configure(highlightbackground="#d9d9d9")
        self.pricevcapp.configure(highlightcolor="black")
        self.pricevcapp.configure(text='''0''')
        self.pricevcapp.configure(textvariable=coffeemanagementsystem_support.costvcapp)

        self.pricelovesp = tk.Label(self.TNotebook1_placeorder)
        self.pricelovesp.place(relx=0.877, rely=0.139, height=31, width=54)
        self.pricelovesp.configure(activebackground="#f9f9f9")
        self.pricelovesp.configure(activeforeground="black")
        self.pricelovesp.configure(background="darkred")
        self.pricelovesp.configure(disabledforeground="#a3a3a3")
        self.pricelovesp.configure(font="-family {Bahnschrift SemiBold SemiConden} -size 13 -weight bold")
        self.pricelovesp.configure(foreground="yellow")
        self.pricelovesp.configure(highlightbackground="#d9d9d9")
        self.pricelovesp.configure(highlightcolor="black")
        self.pricelovesp.configure(text='''0''')
        self.pricelovesp.configure(textvariable=coffeemanagementsystem_support.costlovesp)

        self.pricemocha = tk.Label(self.TNotebook1_placeorder)
        self.pricemocha.place(relx=0.074, rely=0.78, height=32, width=54)
        self.pricemocha.configure(activebackground="#f9f9f9")
        self.pricemocha.configure(activeforeground="black")
        self.pricemocha.configure(background="darkred")
        self.pricemocha.configure(disabledforeground="#a3a3a3")
        self.pricemocha.configure(font="-family {Bahnschrift SemiBold SemiConden} -size 13 -weight bold")
        self.pricemocha.configure(foreground="yellow")
        self.pricemocha.configure(highlightbackground="#d9d9d9")
        self.pricemocha.configure(highlightcolor="black")
        self.pricemocha.configure(text='''0''')
        self.pricemocha.configure(textvariable=coffeemanagementsystem_support.costmocha)

        self.priceethio = tk.Label(self.TNotebook1_placeorder)
        self.priceethio.place(relx=0.349, rely=0.78, height=32, width=54)
        self.priceethio.configure(activebackground="#f9f9f9")
        self.priceethio.configure(activeforeground="black")
        self.priceethio.configure(background="darkred")
        self.priceethio.configure(disabledforeground="#a3a3a3")
        self.priceethio.configure(font="-family {Bahnschrift SemiBold SemiConden} -size 13 -weight bold")
        self.priceethio.configure(foreground="yellow")
        self.priceethio.configure(highlightbackground="#d9d9d9")
        self.priceethio.configure(highlightcolor="black")
        self.priceethio.configure(text='''0''')
        self.priceethio.configure(textvariable=coffeemanagementsystem_support.costethio)

        self.priceicapp = tk.Label(self.TNotebook1_placeorder)
        self.priceicapp.place(relx=0.613, rely=0.78, height=32, width=54)
        self.priceicapp.configure(activebackground="#f9f9f9")
        self.priceicapp.configure(activeforeground="black")
        self.priceicapp.configure(background="darkred")
        self.priceicapp.configure(disabledforeground="#a3a3a3")
        self.priceicapp.configure(font="-family {Bahnschrift SemiBold SemiConden} -size 13 -weight bold")
        self.priceicapp.configure(foreground="yellow")
        self.priceicapp.configure(highlightbackground="#d9d9d9")
        self.priceicapp.configure(highlightcolor="black")
        self.priceicapp.configure(text='''0''')
        self.priceicapp.configure(textvariable=coffeemanagementsystem_support.costicapp)

        self.priceblackcoffee = tk.Label(self.TNotebook1_placeorder)
        self.priceblackcoffee.place(relx=0.856, rely=0.78, height=32, width=54)
        self.priceblackcoffee.configure(activebackground="#f9f9f9")
        self.priceblackcoffee.configure(activeforeground="black")
        self.priceblackcoffee.configure(background="darkred")
        self.priceblackcoffee.configure(disabledforeground="#a3a3a3")
        self.priceblackcoffee.configure(font="-family {Bahnschrift SemiBold SemiConden} -size 13 -weight bold")
        self.priceblackcoffee.configure(foreground="yellow")
        self.priceblackcoffee.configure(highlightbackground="#d9d9d9")
        self.priceblackcoffee.configure(highlightcolor="black")
        self.priceblackcoffee.configure(text='''0''')
        self.priceblackcoffee.configure(textvariable=coffeemanagementsystem_support.costblackcoffee)

        self.ManageEmployeenb = ttk.Notebook(self.TNotebook1_employee)
        self.ManageEmployeenb.place(relx=0.0, rely=0.119, relheight=0.852
                , relwidth=1.012)
        self.ManageEmployeenb.configure(takefocus="")
        self.ManageEmployeenb_tb1 = tk.Frame(self.ManageEmployeenb)
        self.ManageEmployeenb.add(self.ManageEmployeenb_tb1, padding=3)
        self.ManageEmployeenb.tab(0, text="Add    ", compound="left"
                ,underline="-1", )
        self.ManageEmployeenb_tb1.configure(background="white")
        self.ManageEmployeenb_tb1.configure(highlightbackground="#d9d9d9")
        self.ManageEmployeenb_tb1.configure(highlightcolor="black")
        self.ManageEmployeenb_tb2 = tk.Frame(self.ManageEmployeenb)
        self.ManageEmployeenb.add(self.ManageEmployeenb_tb2, padding=3)
        self.ManageEmployeenb.tab(1, text="Delete    ", compound="left"
                ,underline="-1", )
        self.ManageEmployeenb_tb2.configure(background="white")
        self.ManageEmployeenb_tb2.configure(highlightbackground="#d9d9d9")
        self.ManageEmployeenb_tb2.configure(highlightcolor="black")
        self.ManageEmployeenb_tb3 = tk.Frame(self.ManageEmployeenb)
        self.ManageEmployeenb.add(self.ManageEmployeenb_tb3, padding=3)
        self.ManageEmployeenb.tab(2, text="Update    ", compound="none"
                ,underline="-1", )
        self.ManageEmployeenb_tb3.configure(background="white")
        self.ManageEmployeenb_tb3.configure(highlightbackground="#d9d9d9")
        self.ManageEmployeenb_tb3.configure(highlightcolor="black")
        self.ManageEmployeenb_t1 = tk.Frame(self.ManageEmployeenb)
        self.ManageEmployeenb.add(self.ManageEmployeenb_t1, padding=3)
        self.ManageEmployeenb.tab(3, text="View Details", compound="none"
                ,underline="-1", )
        self.ManageEmployeenb_t1.configure(background="white")
        self.ManageEmployeenb_t1.configure(highlightbackground="#d9d9d9")
        self.ManageEmployeenb_t1.configure(highlightcolor="black")

        self.LabelEname = tk.Label(self.ManageEmployeenb_tb1)
        self.LabelEname.place(relx=0.01, rely=0.057, height=51, width=114)
        self.LabelEname.configure(activebackground="#f9f9f9")
        self.LabelEname.configure(activeforeground="black")
        self.LabelEname.configure(background="white")
        self.LabelEname.configure(disabledforeground="#a3a3a3")
        self.LabelEname.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelEname.configure(foreground="#000000")
        self.LabelEname.configure(highlightbackground="#d9d9d9")
        self.LabelEname.configure(highlightcolor="black")
        self.LabelEname.configure(text='''Name''')

        self.Entryname = tk.Entry(self.ManageEmployeenb_tb1)
        self.Entryname.place(relx=0.147, rely=0.095, height=20, relwidth=0.225)
        self.Entryname.configure(background="#80ffff")
        self.Entryname.configure(disabledforeground="#a3a3a3")
        self.Entryname.configure(font="-family {Arial} -size 14")
        self.Entryname.configure(foreground="#000000")
        self.Entryname.configure(highlightbackground="#d9d9d9")
        self.Entryname.configure(highlightcolor="black")
        self.Entryname.configure(insertbackground="black")
        self.Entryname.configure(selectbackground="blue")
        self.Entryname.configure(selectforeground="white")
        self.Entryname.configure(textvariable=coffeemanagementsystem_support.ename)

        self.LabelEno = tk.Label(self.ManageEmployeenb_tb1)
        self.LabelEno.place(relx=0.01, rely=0.171, height=51, width=114)
        self.LabelEno.configure(activebackground="#f9f9f9")
        self.LabelEno.configure(activeforeground="black")
        self.LabelEno.configure(background="white")
        self.LabelEno.configure(disabledforeground="#a3a3a3")
        self.LabelEno.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelEno.configure(foreground="#000000")
        self.LabelEno.configure(highlightbackground="#d9d9d9")
        self.LabelEno.configure(highlightcolor="black")
        self.LabelEno.configure(text='''Phone No.''')

        self.Entryphone = tk.Entry(self.ManageEmployeenb_tb1)
        self.Entryphone.place(relx=0.146, rely=0.205, height=20, relwidth=0.225)
        self.Entryphone.configure(background="#80ffff")
        self.Entryphone.configure(disabledforeground="#a3a3a3")
        self.Entryphone.configure(font="-family {Arial} -size 14")
        self.Entryphone.configure(foreground="#000000")
        self.Entryphone.configure(highlightbackground="#d9d9d9")
        self.Entryphone.configure(highlightcolor="black")
        self.Entryphone.configure(insertbackground="black")
        self.Entryphone.configure(selectbackground="blue")
        self.Entryphone.configure(selectforeground="white")
        self.Entryphone.configure(textvariable=coffeemanagementsystem_support.ephoneno)

        self.LabelEage = tk.Label(self.ManageEmployeenb_tb1)
        self.LabelEage.place(relx=0.01, rely=0.285, height=51, width=114)
        self.LabelEage.configure(activebackground="#f9f9f9")
        self.LabelEage.configure(activeforeground="black")
        self.LabelEage.configure(background="white")
        self.LabelEage.configure(disabledforeground="#a3a3a3")
        self.LabelEage.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelEage.configure(foreground="#000000")
        self.LabelEage.configure(highlightbackground="#d9d9d9")
        self.LabelEage.configure(highlightcolor="black")
        self.LabelEage.configure(text='''Age''')

        self.Entryage = tk.Entry(self.ManageEmployeenb_tb1)
        self.Entryage.place(relx=0.145, rely=0.324, height=20, relwidth=0.057)
        self.Entryage.configure(background="#80ffff")
        self.Entryage.configure(disabledforeground="#a3a3a3")
        self.Entryage.configure(font="-family {Arial} -size 14")
        self.Entryage.configure(foreground="#000000")
        self.Entryage.configure(highlightbackground="#d9d9d9")
        self.Entryage.configure(highlightcolor="black")
        self.Entryage.configure(insertbackground="black")
        self.Entryage.configure(selectbackground="blue")
        self.Entryage.configure(selectforeground="white")
        self.Entryage.configure(textvariable=coffeemanagementsystem_support.eage)

        self.LabelEsalary = tk.Label(self.ManageEmployeenb_tb1)
        self.LabelEsalary.place(relx=0.01, rely=0.398, height=51, width=114)
        self.LabelEsalary.configure(activebackground="#f9f9f9")
        self.LabelEsalary.configure(activeforeground="black")
        self.LabelEsalary.configure(background="white")
        self.LabelEsalary.configure(disabledforeground="#a3a3a3")
        self.LabelEsalary.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelEsalary.configure(foreground="#000000")
        self.LabelEsalary.configure(highlightbackground="#d9d9d9")
        self.LabelEsalary.configure(highlightcolor="black")
        self.LabelEsalary.configure(text='''Salary''')

        self.Entrysalary = tk.Entry(self.ManageEmployeenb_tb1)
        self.Entrysalary.place(relx=0.144, rely=0.435, height=20, relwidth=0.151)

        self.Entrysalary.configure(background="#80ffff")
        self.Entrysalary.configure(disabledforeground="#a3a3a3")
        self.Entrysalary.configure(font="-family {Arial} -size 14")
        self.Entrysalary.configure(foreground="#000000")
        self.Entrysalary.configure(highlightbackground="#d9d9d9")
        self.Entrysalary.configure(highlightcolor="black")
        self.Entrysalary.configure(insertbackground="black")
        self.Entrysalary.configure(selectbackground="blue")
        self.Entrysalary.configure(selectforeground="white")
        self.Entrysalary.configure(textvariable=coffeemanagementsystem_support.esalary)

        self.LabelEmail = tk.Label(self.ManageEmployeenb_tb1)
        self.LabelEmail.place(relx=0.01, rely=0.636, height=49, width=114)
        self.LabelEmail.configure(activebackground="#f9f9f9")
        self.LabelEmail.configure(activeforeground="black")
        self.LabelEmail.configure(background="white")
        self.LabelEmail.configure(disabledforeground="#a3a3a3")
        self.LabelEmail.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelEmail.configure(foreground="#000000")
        self.LabelEmail.configure(highlightbackground="#d9d9d9")
        self.LabelEmail.configure(highlightcolor="black")
        self.LabelEmail.configure(text='''E-Mail''')

        self.Entryemail = tk.Entry(self.ManageEmployeenb_tb1)
        self.Entryemail.place(relx=0.147, rely=0.664, height=20, relwidth=0.151)
        self.Entryemail.configure(background="#80ffff")
        self.Entryemail.configure(disabledforeground="#a3a3a3")
        self.Entryemail.configure(font="-family {Arial} -size 14")
        self.Entryemail.configure(foreground="#000000")
        self.Entryemail.configure(highlightbackground="#d9d9d9")
        self.Entryemail.configure(highlightcolor="black")
        self.Entryemail.configure(insertbackground="black")
        self.Entryemail.configure(selectbackground="blue")
        self.Entryemail.configure(selectforeground="white")
        self.Entryemail.configure(textvariable=coffeemanagementsystem_support.Eemail)

        self.Comboemails = ttk.Combobox(self.ManageEmployeenb_tb1)
        self.Comboemails.place(relx=0.315, rely=0.641, relheight=0.059
                , relwidth=0.163)
        self.value_list = ['@gmail.com','@yahoo.in','@hotmail.com',]
        self.Comboemails.configure(values=self.value_list)
        self.Comboemails.configure(font="-family {Segoe UI Semibold} -size 10 -weight bold")
        self.Comboemails.configure(textvariable=coffeemanagementsystem_support.combobox)
        self.Comboemails.configure(takefocus="")

        self.Buttonadddetails = tk.Button(self.ManageEmployeenb_tb1)
        self.Buttonadddetails.place(relx=0.126, rely=0.797, height=74, width=187)

        self.Buttonadddetails.configure(activebackground="#ececec")
        self.Buttonadddetails.configure(activeforeground="#000000")
        self.Buttonadddetails.configure(background="#f7eafd")
        self.Buttonadddetails.configure(command=coffeemanagementsystem_support.adddetailsemp)
        self.Buttonadddetails.configure(disabledforeground="#a3a3a3")
        self.Buttonadddetails.configure(font="-family {Yu Gothic Medium} -size 13 -weight bold")
        self.Buttonadddetails.configure(foreground="black")
        self.Buttonadddetails.configure(highlightbackground="#d9d9d9")
        self.Buttonadddetails.configure(highlightcolor="black")
        self.Buttonadddetails.configure(pady="0")
        self.Buttonadddetails.configure(relief="flat")
        self.Buttonadddetails.configure(text='''Add Details''')

        self.Label3 = tk.Label(self.ManageEmployeenb_tb1)
        self.Label3.place(relx=0.483, rely=0.019, height=371, width=454)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        photo_location = os.path.join(prog_location,"empimg.png")
        global _img3
        _img3 = tk.PhotoImage(file=photo_location)
        self.Label3.configure(image=_img3)
        self.Label3.configure(text='''Label''')

        self.LabelEcategory = tk.Label(self.ManageEmployeenb_tb1)
        self.LabelEcategory.place(relx=0.01, rely=0.509, height=51, width=114)
        self.LabelEcategory.configure(activebackground="#f9f9f9")
        self.LabelEcategory.configure(activeforeground="black")
        self.LabelEcategory.configure(background="white")
        self.LabelEcategory.configure(disabledforeground="#a3a3a3")
        self.LabelEcategory.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelEcategory.configure(foreground="#000000")
        self.LabelEcategory.configure(highlightbackground="#d9d9d9")
        self.LabelEcategory.configure(highlightcolor="black")
        self.LabelEcategory.configure(text='''Category''')

        self.Combocategory = ttk.Combobox(self.ManageEmployeenb_tb1)
        self.Combocategory.place(relx=0.147, rely=0.539, relheight=0.057
                , relwidth=0.162)
        self.value_list = ['Baristas','Manager','Accountant',]
        self.Combocategory.configure(values=self.value_list)
        self.Combocategory.configure(font="-family {Segoe UI Semibold} -size 10 -weight bold")
        self.Combocategory.configure(textvariable=coffeemanagementsystem_support.combocategory)
        self.Combocategory.configure(takefocus="")

        self.Buttonremoveall = tk.Button(self.ManageEmployeenb_tb2)
        self.Buttonremoveall.place(relx=0.126, rely=0.854, height=74, width=187)
        self.Buttonremoveall.configure(activebackground="#ececec")
        self.Buttonremoveall.configure(activeforeground="#000000")
        self.Buttonremoveall.configure(background="#f7eafd")
        self.Buttonremoveall.configure(command=coffeemanagementsystem_support.removeall)
        self.Buttonremoveall.configure(disabledforeground="#a3a3a3")
        self.Buttonremoveall.configure(font="-family {Yu Gothic Medium} -size 13 -weight bold")
        self.Buttonremoveall.configure(foreground="black")
        self.Buttonremoveall.configure(highlightbackground="#d9d9d9")
        self.Buttonremoveall.configure(highlightcolor="black")
        self.Buttonremoveall.configure(pady="0")
        self.Buttonremoveall.configure(relief="flat")
        self.Buttonremoveall.configure(text='''Remove All''')

        self.Scrolledtreeviewdelete = ScrolledTreeView(self.ManageEmployeenb_tb2)
        self.Scrolledtreeviewdelete.place(relx=0.021, rely=0.038, relheight=0.791
                , relwidth=0.913)
        self.Scrolledtreeviewdelete.configure(columns="Col1 Col2 Col3 Col4 Col5 Col6")
        # build_treeview_support starting.
        self.Scrolledtreeviewdelete.heading("#0",text="Tree")
        self.Scrolledtreeviewdelete.heading("#0",anchor="center")
        self.Scrolledtreeviewdelete.column("#0",width="0")
        self.Scrolledtreeviewdelete.column("#0",minwidth="0")
        self.Scrolledtreeviewdelete.column("#0",stretch="0")
        self.Scrolledtreeviewdelete.column("#0",anchor="w")
        self.Scrolledtreeviewdelete.heading("Col1",text="Name")
        self.Scrolledtreeviewdelete.heading("Col1",anchor="center")
        self.Scrolledtreeviewdelete.column("Col1",width="150")
        self.Scrolledtreeviewdelete.column("Col1",minwidth="20")
        self.Scrolledtreeviewdelete.column("Col1",stretch="1")
        self.Scrolledtreeviewdelete.column("Col1",anchor="w")
        self.Scrolledtreeviewdelete.heading("Col2",text="Age")
        self.Scrolledtreeviewdelete.heading("Col2",anchor="center")
        self.Scrolledtreeviewdelete.column("Col2",width="200")
        self.Scrolledtreeviewdelete.column("Col2",minwidth="20")
        self.Scrolledtreeviewdelete.column("Col2",stretch="1")
        self.Scrolledtreeviewdelete.column("Col2",anchor="w")
        self.Scrolledtreeviewdelete.heading("Col3",text="Phone No.")
        self.Scrolledtreeviewdelete.heading("Col3",anchor="center")
        self.Scrolledtreeviewdelete.column("Col3",width="200")
        self.Scrolledtreeviewdelete.column("Col3",minwidth="20")
        self.Scrolledtreeviewdelete.column("Col3",stretch="1")
        self.Scrolledtreeviewdelete.column("Col3",anchor="w")
        self.Scrolledtreeviewdelete.heading("Col4",text="Salary")
        self.Scrolledtreeviewdelete.heading("Col4",anchor="center")
        self.Scrolledtreeviewdelete.column("Col4",width="200")
        self.Scrolledtreeviewdelete.column("Col4",minwidth="20")
        self.Scrolledtreeviewdelete.column("Col4",stretch="1")
        self.Scrolledtreeviewdelete.column("Col4",anchor="w")
        self.Scrolledtreeviewdelete.heading("Col5",text="Email")
        self.Scrolledtreeviewdelete.heading("Col5",anchor="center")
        self.Scrolledtreeviewdelete.column("Col5",width="200")
        self.Scrolledtreeviewdelete.column("Col5",minwidth="20")
        self.Scrolledtreeviewdelete.column("Col5",stretch="1")
        self.Scrolledtreeviewdelete.column("Col5",anchor="w")
        self.Scrolledtreeviewdelete.heading("Col6",text="Category")
        self.Scrolledtreeviewdelete.heading("Col6",anchor="center")
        self.Scrolledtreeviewdelete.column("Col6",width="200")
        self.Scrolledtreeviewdelete.column("Col6",minwidth="20")
        self.Scrolledtreeviewdelete.column("Col6",stretch="1")
        self.Scrolledtreeviewdelete.column("Col6",anchor="w")

        self.Buttonreselc = tk.Button(self.ManageEmployeenb_tb2)
        self.Buttonreselc.place(relx=0.63, rely=0.854, height=74, width=187)
        self.Buttonreselc.configure(activebackground="#ececec")
        self.Buttonreselc.configure(activeforeground="#000000")
        self.Buttonreselc.configure(background="#f7eafd")
        self.Buttonreselc.configure(command=coffeemanagementsystem_support.removeselected)
        self.Buttonreselc.configure(disabledforeground="#a3a3a3")
        self.Buttonreselc.configure(font="-family {Yu Gothic Medium} -size 13 -weight bold")
        self.Buttonreselc.configure(foreground="black")
        self.Buttonreselc.configure(highlightbackground="#d9d9d9")
        self.Buttonreselc.configure(highlightcolor="black")
        self.Buttonreselc.configure(pady="0")
        self.Buttonreselc.configure(relief="flat")
        self.Buttonreselc.configure(text='''Remove Selected''')

        self.Buttonviewd = tk.Button(self.ManageEmployeenb_tb2)
        self.Buttonviewd.place(relx=0.378, rely=0.854, height=74, width=187)
        self.Buttonviewd.configure(activebackground="#ececec")
        self.Buttonviewd.configure(activeforeground="#000000")
        self.Buttonviewd.configure(background="#f7eafd")
        self.Buttonviewd.configure(command=coffeemanagementsystem_support.viewempdetails)
        self.Buttonviewd.configure(disabledforeground="#a3a3a3")
        self.Buttonviewd.configure(font="-family {Yu Gothic Medium} -size 13 -weight bold")
        self.Buttonviewd.configure(foreground="black")
        self.Buttonviewd.configure(highlightbackground="#d9d9d9")
        self.Buttonviewd.configure(highlightcolor="black")
        self.Buttonviewd.configure(pady="0")
        self.Buttonviewd.configure(relief="flat")
        self.Buttonviewd.configure(text='''View Details''')

        self.Scrolledtreeviewupdate = ScrolledTreeView(self.ManageEmployeenb_tb3)
        self.Scrolledtreeviewupdate.place(relx=0.073, rely=0.019, relheight=0.658
                , relwidth=0.86)
        self.Scrolledtreeviewupdate.configure(columns="Col1 Col2 Col3 Col4 Col5 Col6")
        # build_treeview_support starting.
        self.Scrolledtreeviewupdate.heading("#0",text="Tree")
        self.Scrolledtreeviewupdate.heading("#0",anchor="center")
        self.Scrolledtreeviewupdate.column("#0",width="0")
        self.Scrolledtreeviewupdate.column("#0",minwidth="0")
        self.Scrolledtreeviewupdate.column("#0",stretch="0")
        self.Scrolledtreeviewupdate.column("#0",anchor="w")
        self.Scrolledtreeviewupdate.heading("Col1",text="Name")
        self.Scrolledtreeviewupdate.heading("Col1",anchor="center")
        self.Scrolledtreeviewupdate.column("Col1",width="150")
        self.Scrolledtreeviewupdate.column("Col1",minwidth="20")
        self.Scrolledtreeviewupdate.column("Col1",stretch="1")
        self.Scrolledtreeviewupdate.column("Col1",anchor="w")
        self.Scrolledtreeviewupdate.heading("Col2",text="Age")
        self.Scrolledtreeviewupdate.heading("Col2",anchor="center")
        self.Scrolledtreeviewupdate.column("Col2",width="200")
        self.Scrolledtreeviewupdate.column("Col2",minwidth="20")
        self.Scrolledtreeviewupdate.column("Col2",stretch="1")
        self.Scrolledtreeviewupdate.column("Col2",anchor="w")
        self.Scrolledtreeviewupdate.heading("Col3",text="Phone No.")
        self.Scrolledtreeviewupdate.heading("Col3",anchor="center")
        self.Scrolledtreeviewupdate.column("Col3",width="200")
        self.Scrolledtreeviewupdate.column("Col3",minwidth="20")
        self.Scrolledtreeviewupdate.column("Col3",stretch="1")
        self.Scrolledtreeviewupdate.column("Col3",anchor="w")
        self.Scrolledtreeviewupdate.heading("Col4",text="Salary")
        self.Scrolledtreeviewupdate.heading("Col4",anchor="center")
        self.Scrolledtreeviewupdate.column("Col4",width="200")
        self.Scrolledtreeviewupdate.column("Col4",minwidth="20")
        self.Scrolledtreeviewupdate.column("Col4",stretch="1")
        self.Scrolledtreeviewupdate.column("Col4",anchor="w")
        self.Scrolledtreeviewupdate.heading("Col5",text="Email")
        self.Scrolledtreeviewupdate.heading("Col5",anchor="center")
        self.Scrolledtreeviewupdate.column("Col5",width="200")
        self.Scrolledtreeviewupdate.column("Col5",minwidth="20")
        self.Scrolledtreeviewupdate.column("Col5",stretch="1")
        self.Scrolledtreeviewupdate.column("Col5",anchor="w")
        self.Scrolledtreeviewupdate.heading("Col6",text="Category")
        self.Scrolledtreeviewupdate.heading("Col6",anchor="center")
        self.Scrolledtreeviewupdate.column("Col6",width="200")
        self.Scrolledtreeviewupdate.column("Col6",minwidth="20")
        self.Scrolledtreeviewupdate.column("Col6",stretch="1")
        self.Scrolledtreeviewupdate.column("Col6",anchor="w")

        self.LabelEname_2 = tk.Label(self.ManageEmployeenb_tb3)
        self.LabelEname_2.place(relx=0.01, rely=0.721, height=31, width=74)
        self.LabelEname_2.configure(activebackground="#f9f9f9")
        self.LabelEname_2.configure(activeforeground="black")
        self.LabelEname_2.configure(background="white")
        self.LabelEname_2.configure(disabledforeground="#a3a3a3")
        self.LabelEname_2.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelEname_2.configure(foreground="#000000")
        self.LabelEname_2.configure(highlightbackground="#d9d9d9")
        self.LabelEname_2.configure(highlightcolor="black")
        self.LabelEname_2.configure(text='''Name''')

        self.Entryname_2 = tk.Entry(self.ManageEmployeenb_tb3)
        self.Entryname_2.place(relx=0.105, rely=0.74, height=20, relwidth=0.172)
        self.Entryname_2.configure(background="#80ffff")
        self.Entryname_2.configure(disabledforeground="#a3a3a3")
        self.Entryname_2.configure(font="-family {Arial} -size 14")
        self.Entryname_2.configure(foreground="#000000")
        self.Entryname_2.configure(highlightbackground="#d9d9d9")
        self.Entryname_2.configure(highlightcolor="black")
        self.Entryname_2.configure(insertbackground="black")
        self.Entryname_2.configure(selectbackground="blue")
        self.Entryname_2.configure(selectforeground="white")
        self.Entryname_2.configure(textvariable=coffeemanagementsystem_support.ename)

        self.LabelEno_2 = tk.Label(self.ManageEmployeenb_tb3)
        self.LabelEno_2.place(relx=0.01, rely=0.797, height=31, width=84)
        self.LabelEno_2.configure(activebackground="#f9f9f9")
        self.LabelEno_2.configure(activeforeground="black")
        self.LabelEno_2.configure(background="white")
        self.LabelEno_2.configure(disabledforeground="#a3a3a3")
        self.LabelEno_2.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelEno_2.configure(foreground="#000000")
        self.LabelEno_2.configure(highlightbackground="#d9d9d9")
        self.LabelEno_2.configure(highlightcolor="black")
        self.LabelEno_2.configure(text='''Phone No.''')

        self.Entryphone_2 = tk.Entry(self.ManageEmployeenb_tb3)
        self.Entryphone_2.place(relx=0.105, rely=0.816, height=20
                , relwidth=0.172)
        self.Entryphone_2.configure(background="#80ffff")
        self.Entryphone_2.configure(disabledforeground="#a3a3a3")
        self.Entryphone_2.configure(font="-family {Arial} -size 14")
        self.Entryphone_2.configure(foreground="#000000")
        self.Entryphone_2.configure(highlightbackground="#d9d9d9")
        self.Entryphone_2.configure(highlightcolor="black")
        self.Entryphone_2.configure(insertbackground="black")
        self.Entryphone_2.configure(selectbackground="blue")
        self.Entryphone_2.configure(selectforeground="white")
        self.Entryphone_2.configure(textvariable=coffeemanagementsystem_support.ephoneno)

        self.LabelEage_2 = tk.Label(self.ManageEmployeenb_tb3)
        self.LabelEage_2.place(relx=0.0, rely=0.873, height=31, width=84)
        self.LabelEage_2.configure(activebackground="#f9f9f9")
        self.LabelEage_2.configure(activeforeground="black")
        self.LabelEage_2.configure(background="white")
        self.LabelEage_2.configure(disabledforeground="#a3a3a3")
        self.LabelEage_2.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelEage_2.configure(foreground="#000000")
        self.LabelEage_2.configure(highlightbackground="#d9d9d9")
        self.LabelEage_2.configure(highlightcolor="black")
        self.LabelEage_2.configure(text='''Age''')

        self.Entryage_2 = tk.Entry(self.ManageEmployeenb_tb3)
        self.Entryage_2.place(relx=0.105, rely=0.892, height=20, relwidth=0.057)
        self.Entryage_2.configure(background="#80ffff")
        self.Entryage_2.configure(disabledforeground="#a3a3a3")
        self.Entryage_2.configure(font="-family {Arial} -size 14")
        self.Entryage_2.configure(foreground="#000000")
        self.Entryage_2.configure(highlightbackground="#d9d9d9")
        self.Entryage_2.configure(highlightcolor="black")
        self.Entryage_2.configure(insertbackground="black")
        self.Entryage_2.configure(selectbackground="blue")
        self.Entryage_2.configure(selectforeground="white")
        self.Entryage_2.configure(textvariable=coffeemanagementsystem_support.eage)

        self.LabelEsalary_2 = tk.Label(self.ManageEmployeenb_tb3)
        self.LabelEsalary_2.place(relx=0.304, rely=0.721, height=31, width=84)
        self.LabelEsalary_2.configure(activebackground="#f9f9f9")
        self.LabelEsalary_2.configure(activeforeground="black")
        self.LabelEsalary_2.configure(background="white")
        self.LabelEsalary_2.configure(disabledforeground="#a3a3a3")
        self.LabelEsalary_2.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelEsalary_2.configure(foreground="#000000")
        self.LabelEsalary_2.configure(highlightbackground="#d9d9d9")
        self.LabelEsalary_2.configure(highlightcolor="black")
        self.LabelEsalary_2.configure(text='''Salary''')

        self.Entrysalary_2 = tk.Entry(self.ManageEmployeenb_tb3)
        self.Entrysalary_2.place(relx=0.399, rely=0.74, height=20
                , relwidth=0.151)
        self.Entrysalary_2.configure(background="#80ffff")
        self.Entrysalary_2.configure(disabledforeground="#a3a3a3")
        self.Entrysalary_2.configure(font="-family {Arial} -size 14")
        self.Entrysalary_2.configure(foreground="#000000")
        self.Entrysalary_2.configure(highlightbackground="#d9d9d9")
        self.Entrysalary_2.configure(highlightcolor="black")
        self.Entrysalary_2.configure(insertbackground="black")
        self.Entrysalary_2.configure(selectbackground="blue")
        self.Entrysalary_2.configure(selectforeground="white")
        self.Entrysalary_2.configure(textvariable=coffeemanagementsystem_support.esalary)

        self.LabelEmail_2 = tk.Label(self.ManageEmployeenb_tb3)
        self.LabelEmail_2.place(relx=0.315, rely=0.797, height=31, width=74)
        self.LabelEmail_2.configure(activebackground="#f9f9f9")
        self.LabelEmail_2.configure(activeforeground="black")
        self.LabelEmail_2.configure(background="white")
        self.LabelEmail_2.configure(disabledforeground="#a3a3a3")
        self.LabelEmail_2.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelEmail_2.configure(foreground="#000000")
        self.LabelEmail_2.configure(highlightbackground="#d9d9d9")
        self.LabelEmail_2.configure(highlightcolor="black")
        self.LabelEmail_2.configure(text='''E-Mail''')

        self.Entryemail_2 = tk.Entry(self.ManageEmployeenb_tb3)
        self.Entryemail_2.place(relx=0.399, rely=0.816, height=20
                , relwidth=0.151)
        self.Entryemail_2.configure(background="#80ffff")
        self.Entryemail_2.configure(disabledforeground="#a3a3a3")
        self.Entryemail_2.configure(font="-family {Arial} -size 14")
        self.Entryemail_2.configure(foreground="#000000")
        self.Entryemail_2.configure(highlightbackground="#d9d9d9")
        self.Entryemail_2.configure(highlightcolor="black")
        self.Entryemail_2.configure(insertbackground="black")
        self.Entryemail_2.configure(selectbackground="blue")
        self.Entryemail_2.configure(selectforeground="white")
        self.Entryemail_2.configure(textvariable=coffeemanagementsystem_support.Eemail)

        self.Buttonupdate = tk.Button(self.ManageEmployeenb_tb3)
        self.Buttonupdate.place(relx=0.735, rely=0.721, height=64, width=187)
        self.Buttonupdate.configure(activebackground="#ececec")
        self.Buttonupdate.configure(activeforeground="#000000")
        self.Buttonupdate.configure(background="#f7eafd")
        self.Buttonupdate.configure(command=coffeemanagementsystem_support.updaterecord)
        self.Buttonupdate.configure(disabledforeground="#a3a3a3")
        self.Buttonupdate.configure(font="-family {Yu Gothic Medium} -size 13 -weight bold")
        self.Buttonupdate.configure(foreground="black")
        self.Buttonupdate.configure(highlightbackground="#d9d9d9")
        self.Buttonupdate.configure(highlightcolor="black")
        self.Buttonupdate.configure(pady="0")
        self.Buttonupdate.configure(relief="flat")
        self.Buttonupdate.configure(text='''Update Record''')

        self.Buttonviewu = tk.Button(self.ManageEmployeenb_tb3)
        self.Buttonviewu.place(relx=0.735, rely=0.867, height=64, width=187)
        self.Buttonviewu.configure(activebackground="#ececec")
        self.Buttonviewu.configure(activeforeground="#000000")
        self.Buttonviewu.configure(background="#f7eafd")
        self.Buttonviewu.configure(command=coffeemanagementsystem_support.viewempdetails)
        self.Buttonviewu.configure(disabledforeground="#a3a3a3")
        self.Buttonviewu.configure(font="-family {Yu Gothic Medium} -size 13 -weight bold")
        self.Buttonviewu.configure(foreground="black")
        self.Buttonviewu.configure(highlightbackground="#d9d9d9")
        self.Buttonviewu.configure(highlightcolor="black")
        self.Buttonviewu.configure(pady="0")
        self.Buttonviewu.configure(relief="flat")
        self.Buttonviewu.configure(text='''View Details''')

        self.Combocategoryu = ttk.Combobox(self.ManageEmployeenb_tb3)
        self.Combocategoryu.place(relx=0.4, rely=0.894, relheight=0.04
                , relwidth=0.161)
        self.value_list = ['Baristas','Manager','Accountant',]
        self.Combocategoryu.configure(values=self.value_list)
        self.Combocategoryu.configure(font="-family {Segoe UI Semibold} -size 10 -weight bold")
        self.Combocategoryu.configure(textvariable=coffeemanagementsystem_support.combocategory)
        self.Combocategoryu.configure(takefocus="")

        self.LabelEsalary_2_1 = tk.Label(self.ManageEmployeenb_tb3)
        self.LabelEsalary_2_1.place(relx=0.304, rely=0.873, height=31, width=84)
        self.LabelEsalary_2_1.configure(activebackground="#f9f9f9")
        self.LabelEsalary_2_1.configure(activeforeground="black")
        self.LabelEsalary_2_1.configure(background="white")
        self.LabelEsalary_2_1.configure(disabledforeground="#a3a3a3")
        self.LabelEsalary_2_1.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelEsalary_2_1.configure(foreground="#000000")
        self.LabelEsalary_2_1.configure(highlightbackground="#d9d9d9")
        self.LabelEsalary_2_1.configure(highlightcolor="black")
        self.LabelEsalary_2_1.configure(text='''Category''')

        self.Comboemailsu = ttk.Combobox(self.ManageEmployeenb_tb3)
        self.Comboemailsu.place(relx=0.567, rely=0.803, relheight=0.059
                , relwidth=0.146)
        self.value_list = ['@gmail.com','@yahoo.in','@hotmail.com',]
        self.Comboemailsu.configure(values=self.value_list)
        self.Comboemailsu.configure(font="-family {Segoe UI Semibold} -size 10 -weight bold")
        self.Comboemailsu.configure(textvariable=coffeemanagementsystem_support.combobox)
        self.Comboemailsu.configure(takefocus="")

        self.Scrolledtreesviewdetails = ScrolledTreeView(self.ManageEmployeenb_t1)
        self.Scrolledtreesviewdetails.place(relx=0.073, rely=0.133
                , relheight=0.617, relwidth=0.863)
        self.Scrolledtreesviewdetails.configure(columns="Col1 Col2 Col3 Col4 Col5 Col6")
        # build_treeview_support starting.
        self.Scrolledtreesviewdetails.heading("#0",text="Tree")
        self.Scrolledtreesviewdetails.heading("#0",anchor="center")
        self.Scrolledtreesviewdetails.column("#0",width="0")
        self.Scrolledtreesviewdetails.column("#0",minwidth="0")
        self.Scrolledtreesviewdetails.column("#0",stretch="0")
        self.Scrolledtreesviewdetails.column("#0",anchor="w")
        self.Scrolledtreesviewdetails.heading("Col1",text="Name")
        self.Scrolledtreesviewdetails.heading("Col1",anchor="center")
        self.Scrolledtreesviewdetails.column("Col1",width="150")
        self.Scrolledtreesviewdetails.column("Col1",minwidth="20")
        self.Scrolledtreesviewdetails.column("Col1",stretch="1")
        self.Scrolledtreesviewdetails.column("Col1",anchor="w")
        self.Scrolledtreesviewdetails.heading("Col2",text="Age")
        self.Scrolledtreesviewdetails.heading("Col2",anchor="center")
        self.Scrolledtreesviewdetails.column("Col2",width="200")
        self.Scrolledtreesviewdetails.column("Col2",minwidth="20")
        self.Scrolledtreesviewdetails.column("Col2",stretch="1")
        self.Scrolledtreesviewdetails.column("Col2",anchor="w")
        self.Scrolledtreesviewdetails.heading("Col3",text="Phone No.")
        self.Scrolledtreesviewdetails.heading("Col3",anchor="center")
        self.Scrolledtreesviewdetails.column("Col3",width="200")
        self.Scrolledtreesviewdetails.column("Col3",minwidth="20")
        self.Scrolledtreesviewdetails.column("Col3",stretch="1")
        self.Scrolledtreesviewdetails.column("Col3",anchor="w")
        self.Scrolledtreesviewdetails.heading("Col4",text="Salary")
        self.Scrolledtreesviewdetails.heading("Col4",anchor="center")
        self.Scrolledtreesviewdetails.column("Col4",width="200")
        self.Scrolledtreesviewdetails.column("Col4",minwidth="20")
        self.Scrolledtreesviewdetails.column("Col4",stretch="1")
        self.Scrolledtreesviewdetails.column("Col4",anchor="w")
        self.Scrolledtreesviewdetails.heading("Col5",text="Email")
        self.Scrolledtreesviewdetails.heading("Col5",anchor="center")
        self.Scrolledtreesviewdetails.column("Col5",width="200")
        self.Scrolledtreesviewdetails.column("Col5",minwidth="20")
        self.Scrolledtreesviewdetails.column("Col5",stretch="1")
        self.Scrolledtreesviewdetails.column("Col5",anchor="w")
        self.Scrolledtreesviewdetails.heading("Col6",text="Category")
        self.Scrolledtreesviewdetails.heading("Col6",anchor="center")
        self.Scrolledtreesviewdetails.column("Col6",width="200")
        self.Scrolledtreesviewdetails.column("Col6",minwidth="20")
        self.Scrolledtreesviewdetails.column("Col6",stretch="1")
        self.Scrolledtreesviewdetails.column("Col6",anchor="w")

        self.Buttonsearch = tk.Button(self.ManageEmployeenb_t1)
        self.Buttonsearch.place(relx=0.687, rely=0.036, height=34, width=157)
        self.Buttonsearch.configure(activebackground="#ececec")
        self.Buttonsearch.configure(activeforeground="#000000")
        self.Buttonsearch.configure(background="#f7eafd")
        self.Buttonsearch.configure(command=coffeemanagementsystem_support.searchemployee)
        self.Buttonsearch.configure(disabledforeground="#a3a3a3")
        self.Buttonsearch.configure(font="-family {Yu Gothic Medium} -size 13 -weight bold")
        self.Buttonsearch.configure(foreground="black")
        self.Buttonsearch.configure(highlightbackground="#d9d9d9")
        self.Buttonsearch.configure(highlightcolor="black")
        self.Buttonsearch.configure(pady="0")
        self.Buttonsearch.configure(relief="flat")
        self.Buttonsearch.configure(text='''Search''')

        self.Combosecategory = ttk.Combobox(self.ManageEmployeenb_t1)
        self.Combosecategory.place(relx=0.493, rely=0.038, relheight=0.059
                , relwidth=0.161)
        self.value_list = ['Name','PhoneNo','Email',]
        self.Combosecategory.configure(values=self.value_list)
        self.Combosecategory.configure(font="-family {Segoe UI Semibold} -size 10 -weight bold")
        self.Combosecategory.configure(state='readonly')
        self.Combosecategory.configure(textvariable=coffeemanagementsystem_support.secombobox)
        self.Combosecategory.configure(takefocus="")

        self.EntryEsearchname = tk.Entry(self.ManageEmployeenb_t1)
        self.EntryEsearchname.place(relx=0.28, rely=0.047, height=20
                , relwidth=0.172)
        self.EntryEsearchname.configure(background="#80ffff")
        self.EntryEsearchname.configure(disabledforeground="#a3a3a3")
        self.EntryEsearchname.configure(font="-family {Arial} -size 14")
        self.EntryEsearchname.configure(foreground="#000000")
        self.EntryEsearchname.configure(highlightbackground="#d9d9d9")
        self.EntryEsearchname.configure(highlightcolor="black")
        self.EntryEsearchname.configure(insertbackground="black")
        self.EntryEsearchname.configure(selectbackground="blue")
        self.EntryEsearchname.configure(selectforeground="white")
        self.EntryEsearchname.configure(textvariable=coffeemanagementsystem_support.semployee)

        self.LabelEsdata = tk.Label(self.ManageEmployeenb_t1)
        self.LabelEsdata.place(relx=0.119, rely=0.03, height=31, width=141)
        self.LabelEsdata.configure(activebackground="#f9f9f9")
        self.LabelEsdata.configure(activeforeground="black")
        self.LabelEsdata.configure(background="white")
        self.LabelEsdata.configure(disabledforeground="#a3a3a3")
        self.LabelEsdata.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.LabelEsdata.configure(foreground="#000000")
        self.LabelEsdata.configure(highlightbackground="#d9d9d9")
        self.LabelEsdata.configure(highlightcolor="black")
        self.LabelEsdata.configure(text='''Enter data''')

        self.Buttonsview = tk.Button(self.ManageEmployeenb_t1)
        self.Buttonsview.place(relx=0.399, rely=0.793, height=64, width=187)
        self.Buttonsview.configure(activebackground="#ececec")
        self.Buttonsview.configure(activeforeground="#000000")
        self.Buttonsview.configure(background="#f7eafd")
        self.Buttonsview.configure(command=coffeemanagementsystem_support.viewempdetails)
        self.Buttonsview.configure(disabledforeground="#a3a3a3")
        self.Buttonsview.configure(font="-family {Yu Gothic Medium} -size 13 -weight bold")
        self.Buttonsview.configure(foreground="black")
        self.Buttonsview.configure(highlightbackground="#d9d9d9")
        self.Buttonsview.configure(highlightcolor="black")
        self.Buttonsview.configure(pady="0")
        self.Buttonsview.configure(relief="flat")
        self.Buttonsview.configure(text='''View Details''')

        self.LabelEmp = tk.Label(self.TNotebook1_employee)
        self.LabelEmp.place(relx=0.0, rely=0.0, height=80, width=957)
        self.LabelEmp.configure(activebackground="#f9f9f9")
        self.LabelEmp.configure(activeforeground="black")
        self.LabelEmp.configure(background="#000080")
        self.LabelEmp.configure(disabledforeground="#a3a3a3")
        self.LabelEmp.configure(font="-family {Arial} -size 18 -weight bold -underline 1")
        self.LabelEmp.configure(foreground="white")
        self.LabelEmp.configure(highlightbackground="#d9d9d9")
        self.LabelEmp.configure(highlightcolor="black")
        self.LabelEmp.configure(text='''Manage Employee Details''')

        self.Labelbacks = tk.Label(self.TNotebook1_summary)
        self.Labelbacks.place(relx=0.0, rely=0.0, height=704, width=1010)
        self.Labelbacks.configure(activebackground="#f9f9f9")
        self.Labelbacks.configure(activeforeground="black")
        self.Labelbacks.configure(background="white")
        self.Labelbacks.configure(disabledforeground="#a3a3a3")
        self.Labelbacks.configure(foreground="#000000")
        self.Labelbacks.configure(highlightbackground="#d9d9d9")
        self.Labelbacks.configure(highlightcolor="black")

        self.Buttonsalessummary = tk.Button(self.TNotebook1_summary)
        self.Buttonsalessummary.place(relx=0.148, rely=0.867, height=54
                , width=247)
        self.Buttonsalessummary.configure(activebackground="#ececec")
        self.Buttonsalessummary.configure(activeforeground="#000000")
        self.Buttonsalessummary.configure(background="black")
        self.Buttonsalessummary.configure(command=coffeemanagementsystem_support.generatemostorder)
        self.Buttonsalessummary.configure(disabledforeground="#a3a3a3")
        self.Buttonsalessummary.configure(font="-family {Segoe UI Black} -size 11 -weight bold")
        self.Buttonsalessummary.configure(foreground="white")
        self.Buttonsalessummary.configure(highlightbackground="#d9d9d9")
        self.Buttonsalessummary.configure(highlightcolor="black")
        self.Buttonsalessummary.configure(pady="0")
        self.Buttonsalessummary.configure(relief="groove")
        self.Buttonsalessummary.configure(text='''Generate Total Sales Summary''')

        self.Label1 = tk.Label(self.TNotebook1_summary)
        self.Label1.place(relx=0.349, rely=0.274, height=189, width=292)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="white")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font="-family {@Microsoft JhengHei UI} -size 17 -weight bold")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''Summary''')

        self.Labelsummarydate = tk.Label(self.TNotebook1_summary)
        self.Labelsummarydate.place(relx=0.011, rely=0.015, height=71, width=164)

        self.Labelsummarydate.configure(activebackground="#f9f9f9")
        self.Labelsummarydate.configure(activeforeground="black")
        self.Labelsummarydate.configure(background="white")
        self.Labelsummarydate.configure(disabledforeground="#a3a3a3")
        self.Labelsummarydate.configure(font="-family {MV Boli} -size 15 -weight bold")
        self.Labelsummarydate.configure(foreground="#000000")
        self.Labelsummarydate.configure(highlightbackground="#d9d9d9")
        self.Labelsummarydate.configure(highlightcolor="black")

        self.Buttonprofitsummary = tk.Button(self.TNotebook1_summary)
        self.Buttonprofitsummary.place(relx=0.561, rely=0.867, height=54
                , width=237)
        self.Buttonprofitsummary.configure(activebackground="#ececec")
        self.Buttonprofitsummary.configure(activeforeground="#000000")
        self.Buttonprofitsummary.configure(background="black")
        self.Buttonprofitsummary.configure(command=coffeemanagementsystem_support.generatetotalprofit)
        self.Buttonprofitsummary.configure(disabledforeground="#a3a3a3")
        self.Buttonprofitsummary.configure(font="-family {Segoe UI Black} -size 11 -weight bold")
        self.Buttonprofitsummary.configure(foreground="white")
        self.Buttonprofitsummary.configure(highlightbackground="#d9d9d9")
        self.Buttonprofitsummary.configure(highlightcolor="black")
        self.Buttonprofitsummary.configure(pady="0")
        self.Buttonprofitsummary.configure(relief="groove")
        self.Buttonprofitsummary.configure(text='''Generate Total Profit Summary''')

        self.Labeltpg = tk.Label(self.TNotebook1_summary)
        self.Labeltpg.place(relx=0.201, rely=0.015, height=83, width=591)
        self.Labeltpg.configure(activebackground="#f9f9f9")
        self.Labeltpg.configure(activeforeground="black")
        self.Labeltpg.configure(background="white")
        self.Labeltpg.configure(disabledforeground="#a3a3a3")
        self.Labeltpg.configure(font="-family {Yu Gothic UI Semibold} -size 14 -weight bold")
        self.Labeltpg.configure(foreground="#000000")
        self.Labeltpg.configure(highlightbackground="#d9d9d9")
        self.Labeltpg.configure(highlightcolor="black")

        self.LabelSetPrices = tk.Label(self.TNotebook1_setprices)
        self.LabelSetPrices.place(relx=-0.011, rely=0.0, height=81, width=936)
        self.LabelSetPrices.configure(activebackground="#f9f9f9")
        self.LabelSetPrices.configure(activeforeground="black")
        self.LabelSetPrices.configure(background="#000080")
        self.LabelSetPrices.configure(disabledforeground="#a3a3a3")
        self.LabelSetPrices.configure(font="-family {Arial} -size 18 -weight bold -underline 1")
        self.LabelSetPrices.configure(foreground="white")
        self.LabelSetPrices.configure(highlightbackground="#d9d9d9")
        self.LabelSetPrices.configure(highlightcolor="black")
        self.LabelSetPrices.configure(text='''Set price for items''')

        self.Entrypricelatte = tk.Entry(self.TNotebook1_setprices)
        self.Entrypricelatte.place(relx=0.211, rely=0.239, height=26
                , relwidth=0.047)
        self.Entrypricelatte.configure(background="#80ffff")
        self.Entrypricelatte.configure(disabledforeground="#a3a3a3")
        self.Entrypricelatte.configure(font="-family {Yu Gothic Medium} -size 13 -weight bold")
        self.Entrypricelatte.configure(foreground="#000000")
        self.Entrypricelatte.configure(highlightbackground="#d9d9d9")
        self.Entrypricelatte.configure(highlightcolor="black")
        self.Entrypricelatte.configure(insertbackground="black")
        self.Entrypricelatte.configure(selectbackground="blue")
        self.Entrypricelatte.configure(selectforeground="white")

        self.Entrypricecapp = tk.Entry(self.TNotebook1_setprices)
        self.Entrypricecapp.place(relx=0.211, rely=0.316, height=26
                , relwidth=0.047)
        self.Entrypricecapp.configure(background="#80ffff")
        self.Entrypricecapp.configure(disabledforeground="#a3a3a3")
        self.Entrypricecapp.configure(font="-family {Yu Gothic Medium} -size 13 -weight bold")
        self.Entrypricecapp.configure(foreground="#000000")
        self.Entrypricecapp.configure(highlightbackground="#d9d9d9")
        self.Entrypricecapp.configure(highlightcolor="black")
        self.Entrypricecapp.configure(insertbackground="black")
        self.Entrypricecapp.configure(selectbackground="blue")
        self.Entrypricecapp.configure(selectforeground="white")

        self.Entrypricevcapp = tk.Entry(self.TNotebook1_setprices)
        self.Entrypricevcapp.place(relx=0.211, rely=0.378, height=26
                , relwidth=0.047)
        self.Entrypricevcapp.configure(background="#80ffff")
        self.Entrypricevcapp.configure(disabledforeground="#a3a3a3")
        self.Entrypricevcapp.configure(font="-family {Yu Gothic Medium} -size 13 -weight bold")
        self.Entrypricevcapp.configure(foreground="#000000")
        self.Entrypricevcapp.configure(highlightbackground="#d9d9d9")
        self.Entrypricevcapp.configure(highlightcolor="black")
        self.Entrypricevcapp.configure(insertbackground="black")
        self.Entrypricevcapp.configure(selectbackground="blue")
        self.Entrypricevcapp.configure(selectforeground="white")

        self.Entrypricelovesp = tk.Entry(self.TNotebook1_setprices)
        self.Entrypricelovesp.place(relx=0.211, rely=0.447, height=26
                , relwidth=0.047)
        self.Entrypricelovesp.configure(background="#80ffff")
        self.Entrypricelovesp.configure(disabledforeground="#a3a3a3")
        self.Entrypricelovesp.configure(font="-family {Yu Gothic Medium} -size 13 -weight bold")
        self.Entrypricelovesp.configure(foreground="#000000")
        self.Entrypricelovesp.configure(highlightbackground="#d9d9d9")
        self.Entrypricelovesp.configure(highlightcolor="black")
        self.Entrypricelovesp.configure(insertbackground="black")
        self.Entrypricelovesp.configure(selectbackground="blue")
        self.Entrypricelovesp.configure(selectforeground="white")

        self.Entrypricemocha = tk.Entry(self.TNotebook1_setprices)
        self.Entrypricemocha.place(relx=0.666, rely=0.231, height=26
                , relwidth=0.047)
        self.Entrypricemocha.configure(background="#80ffff")
        self.Entrypricemocha.configure(disabledforeground="#a3a3a3")
        self.Entrypricemocha.configure(font="-family {Yu Gothic Medium} -size 13 -weight bold")
        self.Entrypricemocha.configure(foreground="#000000")
        self.Entrypricemocha.configure(highlightbackground="#d9d9d9")
        self.Entrypricemocha.configure(highlightcolor="black")
        self.Entrypricemocha.configure(insertbackground="black")
        self.Entrypricemocha.configure(selectbackground="blue")
        self.Entrypricemocha.configure(selectforeground="white")

        self.Entrypriceethio = tk.Entry(self.TNotebook1_setprices)
        self.Entrypriceethio.place(relx=0.666, rely=0.308, height=26
                , relwidth=0.047)
        self.Entrypriceethio.configure(background="#80ffff")
        self.Entrypriceethio.configure(disabledforeground="#a3a3a3")
        self.Entrypriceethio.configure(font="-family {Yu Gothic Medium} -size 13 -weight bold")
        self.Entrypriceethio.configure(foreground="#000000")
        self.Entrypriceethio.configure(highlightbackground="#d9d9d9")
        self.Entrypriceethio.configure(highlightcolor="black")
        self.Entrypriceethio.configure(insertbackground="black")
        self.Entrypriceethio.configure(selectbackground="blue")
        self.Entrypriceethio.configure(selectforeground="white")

        self.Entrypriceicapp = tk.Entry(self.TNotebook1_setprices)
        self.Entrypriceicapp.place(relx=0.666, rely=0.385, height=26
                , relwidth=0.047)
        self.Entrypriceicapp.configure(background="#80ffff")
        self.Entrypriceicapp.configure(disabledforeground="#a3a3a3")
        self.Entrypriceicapp.configure(font="-family {Yu Gothic Medium} -size 13 -weight bold")
        self.Entrypriceicapp.configure(foreground="#000000")
        self.Entrypriceicapp.configure(highlightbackground="#d9d9d9")
        self.Entrypriceicapp.configure(highlightcolor="black")
        self.Entrypriceicapp.configure(insertbackground="black")
        self.Entrypriceicapp.configure(selectbackground="blue")
        self.Entrypriceicapp.configure(selectforeground="white")

        self.Entrypriceblack = tk.Entry(self.TNotebook1_setprices)
        self.Entrypriceblack.place(relx=0.666, rely=0.462, height=26
                , relwidth=0.047)
        self.Entrypriceblack.configure(background="#80ffff")
        self.Entrypriceblack.configure(disabledforeground="#a3a3a3")
        self.Entrypriceblack.configure(font="-family {Yu Gothic Medium} -size 13 -weight bold")
        self.Entrypriceblack.configure(foreground="#000000")
        self.Entrypriceblack.configure(highlightbackground="#d9d9d9")
        self.Entrypriceblack.configure(highlightcolor="black")
        self.Entrypriceblack.configure(insertbackground="black")
        self.Entrypriceblack.configure(selectbackground="blue")
        self.Entrypriceblack.configure(selectforeground="white")

        self.Button3 = tk.Button(self.TNotebook1_setprices)
        self.Button3.place(relx=0.391, rely=0.647, height=74, width=167)
        self.Button3.configure(activebackground="#ececec")
        self.Button3.configure(activeforeground="#000000")
        self.Button3.configure(background="#d9d9d9")
        self.Button3.configure(command=coffeemanagementsystem_support.saveprice)
        self.Button3.configure(disabledforeground="#a3a3a3")
        self.Button3.configure(font="-family {Segoe UI Semilight} -size 13 -weight bold")
        self.Button3.configure(foreground="#000000")
        self.Button3.configure(highlightbackground="#d9d9d9")
        self.Button3.configure(highlightcolor="black")
        self.Button3.configure(pady="0")
        self.Button3.configure(relief="groove")
        self.Button3.configure(text='''Save Price''')

        self.Labelpricelatte = tk.Label(self.TNotebook1_setprices)
        self.Labelpricelatte.place(relx=0.021, rely=0.231, height=31, width=114)
        self.Labelpricelatte.configure(activebackground="#f9f9f9")
        self.Labelpricelatte.configure(activeforeground="black")
        self.Labelpricelatte.configure(background="white")
        self.Labelpricelatte.configure(disabledforeground="#a3a3a3")
        self.Labelpricelatte.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.Labelpricelatte.configure(foreground="#000000")
        self.Labelpricelatte.configure(highlightbackground="#d9d9d9")
        self.Labelpricelatte.configure(highlightcolor="black")
        self.Labelpricelatte.configure(text='''Latte''')

        self.Labelpricecapp = tk.Label(self.TNotebook1_setprices)
        self.Labelpricecapp.place(relx=0.021, rely=0.308, height=31, width=114)
        self.Labelpricecapp.configure(activebackground="#f9f9f9")
        self.Labelpricecapp.configure(activeforeground="black")
        self.Labelpricecapp.configure(background="white")
        self.Labelpricecapp.configure(disabledforeground="#a3a3a3")
        self.Labelpricecapp.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.Labelpricecapp.configure(foreground="#000000")
        self.Labelpricecapp.configure(highlightbackground="#d9d9d9")
        self.Labelpricecapp.configure(highlightcolor="black")
        self.Labelpricecapp.configure(text='''Cappuccino''')

        self.Labelpricelvcapp = tk.Label(self.TNotebook1_setprices)
        self.Labelpricelvcapp.place(relx=0.021, rely=0.37, height=31, width=154)
        self.Labelpricelvcapp.configure(activebackground="#f9f9f9")
        self.Labelpricelvcapp.configure(activeforeground="black")
        self.Labelpricelvcapp.configure(background="white")
        self.Labelpricelvcapp.configure(disabledforeground="#a3a3a3")
        self.Labelpricelvcapp.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.Labelpricelvcapp.configure(foreground="#000000")
        self.Labelpricelvcapp.configure(highlightbackground="#d9d9d9")
        self.Labelpricelvcapp.configure(highlightcolor="black")
        self.Labelpricelvcapp.configure(text='''Vanilla Cappuccino''')

        self.Labelpricelovesp = tk.Label(self.TNotebook1_setprices)
        self.Labelpricelovesp.place(relx=0.021, rely=0.447, height=31, width=114)

        self.Labelpricelovesp.configure(activebackground="#f9f9f9")
        self.Labelpricelovesp.configure(activeforeground="black")
        self.Labelpricelovesp.configure(background="white")
        self.Labelpricelovesp.configure(disabledforeground="#a3a3a3")
        self.Labelpricelovesp.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.Labelpricelovesp.configure(foreground="#000000")
        self.Labelpricelovesp.configure(highlightbackground="#d9d9d9")
        self.Labelpricelovesp.configure(highlightcolor="black")
        self.Labelpricelovesp.configure(text='''Love Special''')

        self.Labelpricecafemocha = tk.Label(self.TNotebook1_setprices)
        self.Labelpricecafemocha.place(relx=0.507, rely=0.216, height=31
                , width=114)
        self.Labelpricecafemocha.configure(activebackground="#f9f9f9")
        self.Labelpricecafemocha.configure(activeforeground="black")
        self.Labelpricecafemocha.configure(background="white")
        self.Labelpricecafemocha.configure(disabledforeground="#a3a3a3")
        self.Labelpricecafemocha.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.Labelpricecafemocha.configure(foreground="#000000")
        self.Labelpricecafemocha.configure(highlightbackground="#d9d9d9")
        self.Labelpricecafemocha.configure(highlightcolor="black")
        self.Labelpricecafemocha.configure(text='''Cafe Mocha''')

        self.Labelpriceethio = tk.Label(self.TNotebook1_setprices)
        self.Labelpriceethio.place(relx=0.507, rely=0.3, height=31, width=114)
        self.Labelpriceethio.configure(activebackground="#f9f9f9")
        self.Labelpriceethio.configure(activeforeground="black")
        self.Labelpriceethio.configure(background="white")
        self.Labelpriceethio.configure(disabledforeground="#a3a3a3")
        self.Labelpriceethio.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.Labelpriceethio.configure(foreground="#000000")
        self.Labelpriceethio.configure(highlightbackground="#d9d9d9")
        self.Labelpriceethio.configure(highlightcolor="black")
        self.Labelpriceethio.configure(text='''Ethiopian''')

        self.Labelpriceirishcapp = tk.Label(self.TNotebook1_setprices)
        self.Labelpriceirishcapp.place(relx=0.507, rely=0.378, height=31
                , width=134)
        self.Labelpriceirishcapp.configure(activebackground="#f9f9f9")
        self.Labelpriceirishcapp.configure(activeforeground="black")
        self.Labelpriceirishcapp.configure(background="white")
        self.Labelpriceirishcapp.configure(disabledforeground="#a3a3a3")
        self.Labelpriceirishcapp.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.Labelpriceirishcapp.configure(foreground="#000000")
        self.Labelpriceirishcapp.configure(highlightbackground="#d9d9d9")
        self.Labelpriceirishcapp.configure(highlightcolor="black")
        self.Labelpriceirishcapp.configure(text='''Irish Cappuccino''')

        self.Labelpriceblackcoffee = tk.Label(self.TNotebook1_setprices)
        self.Labelpriceblackcoffee.place(relx=0.507, rely=0.453, height=31
                , width=114)
        self.Labelpriceblackcoffee.configure(activebackground="#f9f9f9")
        self.Labelpriceblackcoffee.configure(activeforeground="black")
        self.Labelpriceblackcoffee.configure(background="white")
        self.Labelpriceblackcoffee.configure(disabledforeground="#a3a3a3")
        self.Labelpriceblackcoffee.configure(font="-family {Yu Gothic UI Semibold} -size 13 -weight bold")
        self.Labelpriceblackcoffee.configure(foreground="#000000")
        self.Labelpriceblackcoffee.configure(highlightbackground="#d9d9d9")
        self.Labelpriceblackcoffee.configure(highlightcolor="black")
        self.Labelpriceblackcoffee.configure(text='''Black Coffee''')

        self.infoname = tk.Label(self.TNotebook1infocustomer)
        self.infoname.place(relx=0.021, rely=0.185, height=71, width=134)
        self.infoname.configure(activebackground="#f9f9f9")
        self.infoname.configure(activeforeground="black")
        self.infoname.configure(background="#ffe8f3")
        self.infoname.configure(disabledforeground="#a3a3a3")
        self.infoname.configure(font="-family {Dubai Medium} -size 14 -weight bold")
        self.infoname.configure(foreground="#000000")
        self.infoname.configure(highlightbackground="#d9d9d9")
        self.infoname.configure(highlightcolor="black")
        self.infoname.configure(text='''Name''')

        self.infophone = tk.Label(self.TNotebook1infocustomer)
        self.infophone.place(relx=0.021, rely=0.316, height=73, width=134)
        self.infophone.configure(activebackground="#f9f9f9")
        self.infophone.configure(activeforeground="black")
        self.infophone.configure(background="#ffe8f3")
        self.infophone.configure(disabledforeground="#a3a3a3")
        self.infophone.configure(font="-family {Dubai Medium} -size 14 -weight bold")
        self.infophone.configure(foreground="#000000")
        self.infophone.configure(highlightbackground="#d9d9d9")
        self.infophone.configure(highlightcolor="black")
        self.infophone.configure(text='''Phone No.''')

        self.infoemail = tk.Label(self.TNotebook1infocustomer)
        self.infoemail.place(relx=0.011, rely=0.505, height=73, width=135)
        self.infoemail.configure(activebackground="#f9f9f9")
        self.infoemail.configure(activeforeground="black")
        self.infoemail.configure(background="#ffe8f3")
        self.infoemail.configure(disabledforeground="#a3a3a3")
        self.infoemail.configure(font="-family {Dubai Medium} -size 14 -weight bold")
        self.infoemail.configure(foreground="#000000")
        self.infoemail.configure(highlightbackground="#d9d9d9")
        self.infoemail.configure(highlightcolor="black")
        self.infoemail.configure(text='''Email''')

        self.Buttoninfosub = tk.Button(self.TNotebook1infocustomer)
        self.Buttoninfosub.place(relx=0.19, rely=0.693, height=74, width=187)
        self.Buttoninfosub.configure(activebackground="#ececec")
        self.Buttoninfosub.configure(activeforeground="#000000")
        self.Buttoninfosub.configure(background="#ffe8f3")
        self.Buttoninfosub.configure(command=coffeemanagementsystem_support.submitinfo)
        self.Buttoninfosub.configure(disabledforeground="#a3a3a3")
        self.Buttoninfosub.configure(font="-family {Dubai Medium} -size 14 -weight bold")
        self.Buttoninfosub.configure(foreground="#000000")
        self.Buttoninfosub.configure(highlightbackground="#d9d9d9")
        self.Buttoninfosub.configure(highlightcolor="black")
        self.Buttoninfosub.configure(pady="0")
        self.Buttoninfosub.configure(relief="ridge")
        self.Buttoninfosub.configure(text='''Submit''')

        self.Entryinfoname = tk.Entry(self.TNotebook1infocustomer)
        self.Entryinfoname.place(relx=0.211, rely=0.231, height=20
                , relwidth=0.268)
        self.Entryinfoname.configure(background="white")
        self.Entryinfoname.configure(disabledforeground="#a3a3a3")
        self.Entryinfoname.configure(font="-family {Bahnschrift SemiLight} -size 13 -weight bold")
        self.Entryinfoname.configure(foreground="#000000")
        self.Entryinfoname.configure(highlightbackground="#d9d9d9")
        self.Entryinfoname.configure(highlightcolor="black")
        self.Entryinfoname.configure(insertbackground="black")
        self.Entryinfoname.configure(selectbackground="blue")
        self.Entryinfoname.configure(selectforeground="white",textvariable=coffeemanagementsystem_support.namesub)
        self.tooltip_font = "TkDefaultFont"
        self.Entryinfoname_tooltip = \
        ToolTip(self.Entryinfoname, self.tooltip_font, '''Enter name''')

        self.Entryinfophone = tk.Entry(self.TNotebook1infocustomer)
        self.Entryinfophone.place(relx=0.212, rely=0.359, height=20
                , relwidth=0.205)
        self.Entryinfophone.configure(background="white")
        self.Entryinfophone.configure(disabledforeground="#a3a3a3")
        self.Entryinfophone.configure(font="-family {Bahnschrift SemiLight} -size 13 -weight bold")
        self.Entryinfophone.configure(foreground="#000000")
        self.Entryinfophone.configure(highlightbackground="#d9d9d9")
        self.Entryinfophone.configure(highlightcolor="black")
        self.Entryinfophone.configure(insertbackground="black")
        self.Entryinfophone.configure(selectbackground="blue")
        self.Entryinfophone.configure(selectforeground="white",textvariable=coffeemanagementsystem_support.phonesub)
        self.tooltip_font = "TkDefaultFont"
        self.Entryinfophone_tooltip = \
        ToolTip(self.Entryinfophone, self.tooltip_font, '''Should be 10 digits ''')

        self.Entryinfoemail = tk.Entry(self.TNotebook1infocustomer)
        self.Entryinfoemail.place(relx=0.212, rely=0.547, height=20
                , relwidth=0.268)
        self.Entryinfoemail.configure(background="white")
        self.Entryinfoemail.configure(disabledforeground="#a3a3a3")
        self.Entryinfoemail.configure(font="-family {Bahnschrift SemiLight} -size 13 -weight bold")
        self.Entryinfoemail.configure(foreground="#000000")
        self.Entryinfoemail.configure(highlightbackground="#d9d9d9")
        self.Entryinfoemail.configure(highlightcolor="black")
        self.Entryinfoemail.configure(insertbackground="black")
        self.Entryinfoemail.configure(selectbackground="blue")
        self.Entryinfoemail.configure(selectforeground="white",textvariable=coffeemanagementsystem_support.emailsub)
        self.tooltip_font = "TkDefaultFont"
        self.Entryinfoemail_tooltip = \
        ToolTip(self.Entryinfoemail, self.tooltip_font, '''Enter email''')

        self.handshakeimg = tk.Label(self.TNotebook1infocustomer)
        self.handshakeimg.place(relx=0.55, rely=0.169, height=395, width=417)
        self.handshakeimg.configure(activebackground="#f9f9f9")
        self.handshakeimg.configure(activeforeground="black")
        self.handshakeimg.configure(background="#d9d9d9")
        self.handshakeimg.configure(disabledforeground="#a3a3a3")
        self.handshakeimg.configure(foreground="#000000")
        self.handshakeimg.configure(highlightbackground="#d9d9d9")
        self.handshakeimg.configure(highlightcolor="black")
        photo_location = os.path.join(prog_location,"handshakeimg.png")
        global _img4
        _img4 = tk.PhotoImage(file=photo_location)
        self.handshakeimg.configure(image=_img4)
        self.handshakeimg.configure(text='''Label''')

        self.infoage = tk.Label(self.TNotebook1infocustomer)
        self.infoage.place(relx=0.014, rely=0.421, height=73, width=137)
        self.infoage.configure(activebackground="#f9f9f9")
        self.infoage.configure(activeforeground="black")
        self.infoage.configure(background="#ffe8f3")
        self.infoage.configure(disabledforeground="#a3a3a3")
        self.infoage.configure(font="-family {Dubai Medium} -size 14 -weight bold")
        self.infoage.configure(foreground="#000000")
        self.infoage.configure(highlightbackground="#d9d9d9")
        self.infoage.configure(highlightcolor="black")
        self.infoage.configure(text='''Age''')

        self.Entryinfoage = tk.Entry(self.TNotebook1infocustomer)
        self.Entryinfoage.place(relx=0.216, rely=0.462, height=20
                , relwidth=0.047)
        self.Entryinfoage.configure(background="white")
        self.Entryinfoage.configure(disabledforeground="#a3a3a3")
        self.Entryinfoage.configure(font="-family {Bahnschrift SemiLight} -size 13 -weight bold")
        self.Entryinfoage.configure(foreground="#000000")
        self.Entryinfoage.configure(highlightbackground="#d9d9d9")
        self.Entryinfoage.configure(highlightcolor="black")
        self.Entryinfoage.configure(insertbackground="black")
        self.Entryinfoage.configure(selectbackground="blue")
        self.Entryinfoage.configure(selectforeground="white",textvariable=coffeemanagementsystem_support.agesub)
        self.tooltip_font = "TkDefaultFont"
        self.Entryinfoage_tooltip = \
        ToolTip(self.Entryinfoage, self.tooltip_font, '''Enter age''')

        self.LabelSubmitform = tk.Label(self.TNotebook1infocustomer)
        self.LabelSubmitform.place(relx=-0.032, rely=0.0, height=80, width=997)
        self.LabelSubmitform.configure(activebackground="#f9f9f9")
        self.LabelSubmitform.configure(activeforeground="black")
        self.LabelSubmitform.configure(background="#000080")
        self.LabelSubmitform.configure(disabledforeground="#a3a3a3")
        self.LabelSubmitform.configure(font="-family {Arial} -size 18 -weight bold -underline 1")
        self.LabelSubmitform.configure(foreground="white")
        self.LabelSubmitform.configure(highlightbackground="#d9d9d9")
        self.LabelSubmitform.configure(highlightcolor="black")
        self.LabelSubmitform.configure(text='''Submit Form''')

        self.Labelowner = tk.Label(self.TNotebook1_ownerlogin)
        self.Labelowner.place(relx=0.032, rely=0.247, height=91, width=304)
        self.Labelowner.configure(activebackground="#f9f9f9")
        self.Labelowner.configure(activeforeground="black")
        self.Labelowner.configure(background="#00ffff")
        self.Labelowner.configure(disabledforeground="#a3a3a3")
        self.Labelowner.configure(font="-family {Segoe UI Light} -size 13 -weight bold")
        self.Labelowner.configure(foreground="#000000")
        self.Labelowner.configure(highlightbackground="#d9d9d9")
        self.Labelowner.configure(highlightcolor="black")
        self.Labelowner.configure(text='''Enter owner id''')

        self.Labelownerpass = tk.Label(self.TNotebook1_ownerlogin)
        self.Labelownerpass.place(relx=0.032, rely=0.447, height=91, width=304)
        self.Labelownerpass.configure(activebackground="#f9f9f9")
        self.Labelownerpass.configure(activeforeground="black")
        self.Labelownerpass.configure(background="#00ffff")
        self.Labelownerpass.configure(disabledforeground="#a3a3a3")
        self.Labelownerpass.configure(font="-family {Segoe UI Light} -size 13 -weight bold")
        self.Labelownerpass.configure(foreground="#000000")
        self.Labelownerpass.configure(highlightbackground="#d9d9d9")
        self.Labelownerpass.configure(highlightcolor="black")
        self.Labelownerpass.configure(text='''Enter password''')

        self.Entryownerid = tk.Entry(self.TNotebook1_ownerlogin)
        self.Entryownerid.place(relx=0.46, rely=0.308, height=20, relwidth=0.195)

        self.Entryownerid.configure(background="white")
        self.Entryownerid.configure(disabledforeground="#a3a3a3")
        self.Entryownerid.configure(font="-family {Arial} -size 13")
        self.Entryownerid.configure(foreground="#000000")
        self.Entryownerid.configure(highlightbackground="#d9d9d9")
        self.Entryownerid.configure(highlightcolor="black")
        self.Entryownerid.configure(insertbackground="black")
        self.Entryownerid.configure(selectbackground="blue")
        self.Entryownerid.configure(selectforeground="white",textvariable=coffeemanagementsystem_support.ownerid)

        self.Entryiownerpass = tk.Entry(self.TNotebook1_ownerlogin)
        self.Entryiownerpass.place(relx=0.46, rely=0.499, height=20
                , relwidth=0.195)
        self.Entryiownerpass.configure(background="white")
        self.Entryiownerpass.configure(disabledforeground="#a3a3a3")
        self.Entryiownerpass.configure(font="-family {Arial} -size 13")
        self.Entryiownerpass.configure(foreground="#000000")
        self.Entryiownerpass.configure(highlightbackground="#d9d9d9")
        self.Entryiownerpass.configure(highlightcolor="black")
        self.Entryiownerpass.configure(insertbackground="black")
        self.Entryiownerpass.configure(selectbackground="blue")
        self.Entryiownerpass.configure(selectforeground="white",textvariable=coffeemanagementsystem_support.ownerpassword,show='*')

        self.Buttonownersubmit = tk.Button(self.TNotebook1_ownerlogin)
        self.Buttonownersubmit.place(relx=0.412, rely=0.616, height=104
                , width=157)
        self.Buttonownersubmit.configure(activebackground="#ececec")
        self.Buttonownersubmit.configure(activeforeground="#000000")
        self.Buttonownersubmit.configure(background="#80ffff")
        self.Buttonownersubmit.configure(command=coffeemanagementsystem_support.submitowneraccess)
        self.Buttonownersubmit.configure(disabledforeground="#a3a3a3")
        self.Buttonownersubmit.configure(font="-family {Yu Gothic UI Semibold} -size 12 -weight bold")
        self.Buttonownersubmit.configure(foreground="#000000")
        self.Buttonownersubmit.configure(highlightbackground="#d9d9d9")
        self.Buttonownersubmit.configure(highlightcolor="black")
        self.Buttonownersubmit.configure(pady="0")
        self.Buttonownersubmit.configure(relief="groove")
        self.Buttonownersubmit.configure(text='''Submit''')

        self.MainmenuCustomer = tk.Button(self.TNotebook1_mainmenu)
        self.MainmenuCustomer.place(relx=-0.011, rely=0.0, height=674, width=327)

        self.MainmenuCustomer.configure(activebackground="#ececec")
        self.MainmenuCustomer.configure(activeforeground="#000000")
        self.MainmenuCustomer.configure(background="#fce4fa")
        self.MainmenuCustomer.configure(command=coffeemanagementsystem_support.customeredirect)
        self.MainmenuCustomer.configure(disabledforeground="#a3a3a3")
        self.MainmenuCustomer.configure(font="-family {Yu Gothic UI Semibold} -size 22 -weight bold")
        self.MainmenuCustomer.configure(foreground="#000000")
        self.MainmenuCustomer.configure(highlightbackground="#d9d9d9")
        self.MainmenuCustomer.configure(highlightcolor="black")
        self.MainmenuCustomer.configure(pady="0")
        self.MainmenuCustomer.configure(relief="ridge")
        self.MainmenuCustomer.configure(text='''Customer''')

        self.MainmenuManager = tk.Button(self.TNotebook1_mainmenu)
        self.MainmenuManager.place(relx=0.336, rely=-0.006, height=684
                , width=317)
        self.MainmenuManager.configure(activebackground="#ececec")
        self.MainmenuManager.configure(activeforeground="#000000")
        self.MainmenuManager.configure(background="#333333")
        self.MainmenuManager.configure(command=coffeemanagementsystem_support.manageredirect)
        self.MainmenuManager.configure(disabledforeground="#a3a3a3")
        self.MainmenuManager.configure(font="-family {Yu Gothic UI Semibold} -size 22 -weight bold")
        self.MainmenuManager.configure(foreground="white")
        self.MainmenuManager.configure(highlightbackground="#d9d9d9")
        self.MainmenuManager.configure(highlightcolor="black")
        self.MainmenuManager.configure(pady="0")
        self.MainmenuManager.configure(relief="ridge")
        self.MainmenuManager.configure(text='''Manager''')

        self.Mainmenuownerlogin = tk.Button(self.TNotebook1_mainmenu)
        self.Mainmenuownerlogin.place(relx=0.666, rely=0.0, height=684
                , width=317)
        self.Mainmenuownerlogin.configure(activebackground="#ececec")
        self.Mainmenuownerlogin.configure(activeforeground="#000000")
        self.Mainmenuownerlogin.configure(background="#ff5555")
        self.Mainmenuownerlogin.configure(command=coffeemanagementsystem_support.ownerredirect)
        self.Mainmenuownerlogin.configure(disabledforeground="#a3a3a3")
        self.Mainmenuownerlogin.configure(font="-family {Yu Gothic UI Semibold} -size 22 -weight bold")
        self.Mainmenuownerlogin.configure(foreground="white")
        self.Mainmenuownerlogin.configure(highlightbackground="#d9d9d9")
        self.Mainmenuownerlogin.configure(highlightcolor="black")
        self.Mainmenuownerlogin.configure(pady="0")
        self.Mainmenuownerlogin.configure(relief="ridge")
        self.Mainmenuownerlogin.configure(text='''Owner''')

        self.Labelcustomermm = tk.Label(self.TNotebook1_mainmenu)
        self.Labelcustomermm.place(relx=0.032, rely=0.082, height=259, width=254)

        self.Labelcustomermm.configure(activebackground="#f9f9f9")
        self.Labelcustomermm.configure(activeforeground="black")
        self.Labelcustomermm.configure(background="#fce4fa")
        self.Labelcustomermm.configure(disabledforeground="#a3a3a3")
        self.Labelcustomermm.configure(foreground="#000000")
        self.Labelcustomermm.configure(highlightbackground="#d9d9d9")
        self.Labelcustomermm.configure(highlightcolor="black")
        photo_location = os.path.join(prog_location,"Customermm.png")
        global _img5
        _img5 = tk.PhotoImage(file=photo_location)
        self.Labelcustomermm.configure(image=_img5)
        self.Labelcustomermm.configure(text='''Label''')

        self.Label5 = tk.Label(self.TNotebook1_mainmenu)
        self.Label5.place(relx=0.381, rely=0.082, height=269, width=254)
        self.Label5.configure(activebackground="#f9f9f9")
        self.Label5.configure(activeforeground="black")
        self.Label5.configure(background="#333333")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(highlightbackground="#d9d9d9")
        self.Label5.configure(highlightcolor="black")
        photo_location = os.path.join(prog_location,"Managermm.png")
        global _img6
        _img6 = tk.PhotoImage(file=photo_location)
        self.Label5.configure(image=_img6)
        self.Label5.configure(text='''Label''')

        self.Label6 = tk.Label(self.TNotebook1_mainmenu)
        self.Label6.place(relx=0.708, rely=0.082, height=269, width=255)
        self.Label6.configure(activebackground="#f9f9f9")
        self.Label6.configure(activeforeground="black")
        self.Label6.configure(background="#ff5555")
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(highlightbackground="#d9d9d9")
        self.Label6.configure(highlightcolor="black")
        photo_location = os.path.join(prog_location,"Ownermm.png")
        global _img7
        _img7 = tk.PhotoImage(file=photo_location)
        self.Label6.configure(image=_img7)
        self.Label6.configure(text='''Label''')

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.menubar.add_command(
                command=coffeemanagementsystem_support.backtomm,
                label="Back To Main menu")

# ======================================================
# Support code for Balloon Help (also called tooltips).
# Found the original code at:
# http://code.activestate.com/recipes/576688-tooltip-for-tkinter/
# Modified by Rozen to remove Tkinter import statements and to receive
# the font as an argument.
# ======================================================

from time import time, localtime, strftime

class ToolTip(tk.Toplevel):
    """
    Provides a ToolTip widget for Tkinter.
    To apply a ToolTip to any Tkinter widget, simply pass the widget to the
    ToolTip constructor
    """
    def __init__(self, wdgt, tooltip_font, msg=None, msgFunc=None,
                 delay=0.5, follow=True):
        """
        Initialize the ToolTip

        Arguments:
          wdgt: The widget this ToolTip is assigned to
          tooltip_font: Font to be used
          msg:  A static string message assigned to the ToolTip
          msgFunc: A function that retrieves a string to use as the ToolTip text
          delay:   The delay in seconds before the ToolTip appears(may be float)
          follow:  If True, the ToolTip follows motion, otherwise hides
        """
        self.wdgt = wdgt
        # The parent of the ToolTip is the parent of the ToolTips widget
        self.parent = self.wdgt.master
        # Initalise the Toplevel
        tk.Toplevel.__init__(self, self.parent, bg='black', padx=1, pady=1)
        # Hide initially
        self.withdraw()
        # The ToolTip Toplevel should have no frame or title bar
        self.overrideredirect(True)

        # The msgVar will contain the text displayed by the ToolTip
        self.msgVar = tk.StringVar()
        if msg is None:
            self.msgVar.set('No message provided')
        else:
            self.msgVar.set(msg)
        self.msgFunc = msgFunc
        self.delay = delay
        self.follow = follow
        self.visible = 0
        self.lastMotion = 0
        # The text of the ToolTip is displayed in a Message widget
        tk.Message(self, textvariable=self.msgVar, bg='#FFFFDD',
                font=tooltip_font,
                aspect=1000).grid()

        # Add bindings to the widget.  This will NOT override
        # bindings that the widget already has
        self.wdgt.bind('<Enter>', self.spawn, '+')
        self.wdgt.bind('<Leave>', self.hide, '+')
        self.wdgt.bind('<Motion>', self.move, '+')

    def spawn(self, event=None):
        """
        Spawn the ToolTip.  This simply makes the ToolTip eligible for display.
        Usually this is caused by entering the widget

        Arguments:
          event: The event that called this funciton
        """
        self.visible = 1
        # The after function takes a time argument in milliseconds
        self.after(int(self.delay * 1000), self.show)

    def show(self):
        """
        Displays the ToolTip if the time delay has been long enough
        """
        if self.visible == 1 and time() - self.lastMotion > self.delay:
            self.visible = 2
        if self.visible == 2:
            self.deiconify()

    def move(self, event):
        """
        Processes motion within the widget.
        Arguments:
          event: The event that called this function
        """
        self.lastMotion = time()
        # If the follow flag is not set, motion within the
        # widget will make the ToolTip disappear
        #
        if self.follow is False:
            self.withdraw()
            self.visible = 1

        # Offset the ToolTip 10x10 pixes southwest of the pointer
        self.geometry('+%i+%i' % (event.x_root+20, event.y_root-10))
        try:
            # Try to call the message function.  Will not change
            # the message if the message function is None or
            # the message function fails
            self.msgVar.set(self.msgFunc())
        except:
            pass
        self.after(int(self.delay * 1000), self.show)

    def hide(self, event=None):
        """
        Hides the ToolTip.  Usually this is caused by leaving the widget
        Arguments:
          event: The event that called this function
        """
        self.visible = 0
        self.withdraw()

    def update(self, msg):
        """
        Updates the Tooltip with a new message. Added by Rozen
        """
        self.msgVar.set(msg)

# ===========================================================
#                   End of Class ToolTip
# ===========================================================

# The following code is added to facilitate the Scrolled widgets you specified.
class AutoScroll(object):
    '''Configure the scrollbars for a widget.'''
    def __init__(self, master):
        #  Rozen. Added the try-except clauses so that this class
        #  could be used for scrolled entry widget for which vertical
        #  scrolling is not supported. 5/7/14.
        try:
            vsb = ttk.Scrollbar(master, orient='vertical', command=self.yview)
        except:
            pass
        hsb = ttk.Scrollbar(master, orient='horizontal', command=self.xview)
        try:
            self.configure(yscrollcommand=self._autoscroll(vsb))
        except:
            pass
        self.configure(xscrollcommand=self._autoscroll(hsb))
        self.grid(column=0, row=0, sticky='nsew')
        try:
            vsb.grid(column=1, row=0, sticky='ns')
        except:
            pass
        hsb.grid(column=0, row=1, sticky='ew')
        master.grid_columnconfigure(0, weight=1)
        master.grid_rowconfigure(0, weight=1)
        # Copy geometry methods of master  (taken from ScrolledText.py)
        if py3:
            methods = tk.Pack.__dict__.keys() | tk.Grid.__dict__.keys() \
                  | tk.Place.__dict__.keys()
        else:
            methods = tk.Pack.__dict__.keys() + tk.Grid.__dict__.keys() \
                  + tk.Place.__dict__.keys()
        for meth in methods:
            if meth[0] != '_' and meth not in ('config', 'configure'):
                setattr(self, meth, getattr(master, meth))

    @staticmethod
    def _autoscroll(sbar):
        '''Hide and show scrollbar as needed.'''
        def wrapped(first, last):
            first, last = float(first), float(last)
            if first <= 0 and last >= 1:
                sbar.grid_remove()
            else:
                sbar.grid()
            sbar.set(first, last)
        return wrapped

    def __str__(self):
        return str(self.master)

def _create_container(func):
    '''Creates a ttk Frame with a given master, and use this new frame to
    place the scrollbars and the widget.'''
    def wrapped(cls, master, **kw):
        container = ttk.Frame(master)
        container.bind('<Enter>', lambda e: _bound_to_mousewheel(e, container))
        container.bind('<Leave>', lambda e: _unbound_to_mousewheel(e, container))
        return func(cls, container, **kw)
    return wrapped

class ScrolledTreeView(AutoScroll, ttk.Treeview):
    '''A standard ttk Treeview widget with scrollbars that will
    automatically show/hide as needed.'''
    @_create_container
    def __init__(self, master, **kw):
        ttk.Treeview.__init__(self, master, **kw)
        AutoScroll.__init__(self, master)

import platform
def _bound_to_mousewheel(event, widget):
    child = widget.winfo_children()[0]
    if platform.system() == 'Windows' or platform.system() == 'Darwin':
        child.bind_all('<MouseWheel>', lambda e: _on_mousewheel(e, child))
        child.bind_all('<Shift-MouseWheel>', lambda e: _on_shiftmouse(e, child))
    else:
        child.bind_all('<Button-4>', lambda e: _on_mousewheel(e, child))
        child.bind_all('<Button-5>', lambda e: _on_mousewheel(e, child))
        child.bind_all('<Shift-Button-4>', lambda e: _on_shiftmouse(e, child))
        child.bind_all('<Shift-Button-5>', lambda e: _on_shiftmouse(e, child))

def _unbound_to_mousewheel(event, widget):
    if platform.system() == 'Windows' or platform.system() == 'Darwin':
        widget.unbind_all('<MouseWheel>')
        widget.unbind_all('<Shift-MouseWheel>')
    else:
        widget.unbind_all('<Button-4>')
        widget.unbind_all('<Button-5>')
        widget.unbind_all('<Shift-Button-4>')
        widget.unbind_all('<Shift-Button-5>')

def _on_mousewheel(event, widget):
    if platform.system() == 'Windows':
        widget.yview_scroll(-1*int(event.delta/120),'units')
    elif platform.system() == 'Darwin':
        widget.yview_scroll(-1*int(event.delta),'units')
    else:
        if event.num == 4:
            widget.yview_scroll(-1, 'units')
        elif event.num == 5:
            widget.yview_scroll(1, 'units')

def _on_shiftmouse(event, widget):
    if platform.system() == 'Windows':
        widget.xview_scroll(-1*int(event.delta/120), 'units')
    elif platform.system() == 'Darwin':
        widget.xview_scroll(-1*int(event.delta), 'units')
    else:
        if event.num == 4:
            widget.xview_scroll(-1, 'units')
        elif event.num == 5:
            widget.xview_scroll(1, 'units')

if __name__ == '__main__':
    vp_start_gui()





